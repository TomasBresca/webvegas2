---
//Hero(3).astro
const { whatsappLink1, whatsappLink2, pixelEvent } = Astro.props;
import '../styles/global.css';
---

<section class="relative min-h-screen flex flex-col items-center pt-20 md:pt-24 pb-10 bg-gradient-to-b from-casino-purple to-[#1A0F36] overflow-hidden w-full">
  <!-- Elementos flotantes decorativos -->
  <div class="absolute inset-0 pointer-events-none">
    <div class="floating-element absolute top-1/4 left-10 w-12 h-12 opacity-30 animate-spin-slow">
      <img src="/images/chips.svg" alt="" class="w-full h-full" />
    </div>
    <div class="floating-element absolute top-2/3 right-12 w-16 h-16 opacity-20 animate-pulse-slow" style="animation-delay: 1s;">
      <img src="/images/ace.svg" alt="" class="w-full h-full" />
    </div>
    <div class="floating-element absolute bottom-1/4 left-1/3 w-14 h-14 opacity-25" style="animation-delay: 0.5s;">
      <img src="/images/gambling.svg" alt="" class="w-full h-full" />
    </div>
    <div class="floating-element absolute top-1/3 right-1/4 w-10 h-10 opacity-20" style="animation-delay: 1.5s;">
      <img src="/images/ace.svg" alt="" class="w-full h-full" />
    </div>
  </div>
  
  <!-- Efecto de luz de fondo -->
  <div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-full h-full max-w-lg max-h-lg bg-casino-gold/10 blur-[100px] rounded-full"></div>
  
  <div class="w-full px-5 max-w-md mx-auto flex flex-col items-center justify-start relative z-10 text-center flex-grow py-8">
    <!-- BONUS GARANTIZADO -->
    <h1 class="text-4xl sm:text-5xl mb-6 text-white uppercase hero-title font-extrabold tracking-wide">
      BONUS <span class="gradient-text">GARANTIZADO</span>
    </h1>
    
    <!-- Calculadora de Bonus -->
    <div class="bonus-calculator bg-gradient-to-b from-[#2c1a56]/90 to-[#1E1040]/70 border border-[#FFD070]/40 p-4 rounded-lg shadow-lg backdrop-blur-sm w-full mb-8">
      <div class="mb-3">
        <h3 class="text-white text-lg font-bold">¡RECIBE UN 10% EXTRA!</h3>
      </div>
      
      <div class="calculator-display flex flex-col bg-[#1E1040]/80 p-4 rounded-lg border border-[#FFD070]/20">
        <div class="flex justify-between items-center mb-2">
          <div class="text-white/70 text-sm">Tu depósito:</div>
          <div id="deposit-amount" class="text-white text-xl font-bold">$1,000</div>
        </div>
        
        <div class="flex justify-between items-center mb-2">
          <div class="text-white/70 text-sm">Bonus (10%):</div>
          <div id="bonus-amount" class="text-[#FFD700] text-xl font-bold">$100</div>
        </div>
        
        <div class="h-px w-full bg-[#FFD070]/20 my-2"></div>
        
        <div class="flex justify-between items-center">
          <div class="text-white/70 text-sm">Total:</div>
          <div id="total-amount" class="text-[#FFD700] text-2xl font-extrabold glow-text">$1,100</div>
        </div>
      </div>
    </div>
    
    <!-- Texto desafío -->
    <div class="challenge-text mb-6 text-center">
      <p class="text-xl sm:text-2xl text-white font-bold mb-3">¡Aprovecha tu bonus ahora!</p>
      <div class="text-white/90 text-lg py-2 px-4 bg-[#1E1040]/80 rounded-lg inline-block transform rotate-1 shadow-lg border border-[#FFD070]/20">
        Regístrate para reclamar <span class="animate-bounce inline-block">👇</span>
      </div>
    </div>
    
    <!-- CTA Button -->
    <a
      id="cta-button" 
      href={whatsappLink1} 
      target="_blank" 
      rel="noopener" 
      class="cta-button w-full flex items-center justify-center gap-3 bg-gradient-to-r from-green-600 to-green-500 hover:from-green-500 hover:to-green-600 text-white text-xl font-extrabold py-5 px-6 rounded-xl transition-all hover:scale-105 shadow-xl"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="h-7 w-7" fill="white" viewBox="0 0 24 24">
        <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413z"/>
      </svg>
      RECLAMAR MI BONUS
    </a>
  </div>
  
  <!-- Textura de fondo -->
  <div class="absolute inset-0 bg-grid-pattern opacity-5"></div>
  
</section>

<style>
  .bg-grid-pattern {
    background-image: 
      linear-gradient(rgba(255, 193, 7, 0.1) 1px, transparent 1px),
      linear-gradient(90deg, rgba(255, 193, 7, 0.1) 1px, transparent 1px);
    background-size: 25px 25px;
  }
  
  .cta-button {
    position: relative;
    overflow: hidden;
    box-shadow: 0 0 25px rgba(22, 163, 74, 0.5);
  }
  
  .cta-button::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
      to bottom right,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.2) 50%,
      rgba(255, 255, 255, 0) 100%
    );
    transform: rotate(45deg);
    animation: shine 3s infinite;
  }
  
  @keyframes shine {
    0% {
      left: -100%;
      top: -100%;
    }
    100% {
      left: 100%;
      top: 100%;
    }
  }
  
  .gradient-text {
    background-image: linear-gradient(45deg, #FFD700, #FFB627);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    display: inline-block;
    position: relative;
  }
  
  .gradient-text::after {
    content: '';
    position: absolute;
    bottom: -3px;
    left: 0;
    width: 100%;
    height: 3px;
    background-image: linear-gradient(45deg, #FFD700, #FFB627);
    border-radius: 2px;
  }
  
  .hero-title {
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
    letter-spacing: 0.05em;
  }
  
  .glow-text {
    text-shadow: 0 0 10px rgba(255, 215, 0, 0.5);
  }
  
  .calculator-display {
    transition: all 0.3s ease;
  }
</style>

<script>
  // Valores actuales
  let currentDeposit = 0;
  let currentBonus = 0;
  let currentTotal = 0;
  
  // Montos a rotar
  const amounts = [1000, 5000, 10000, 70000];
  let currentIndex = 0;
  
  // Formatear número como moneda
  const formatCurrency = (amount: any) => {
    return '$' + amount.toLocaleString('en-US');
  };
  
  // Animación de contador
  const animateCounter = (elementId: any, start: any, end: any, duration = 1000) => {
    const element = document.getElementById(elementId);
    if (!element) return;
    
    const startTime = performance.now();
    const change = end - start;
    
    const updateCounter = (currentTime: any) => {
      const elapsedTime = currentTime - startTime;
      
      if (elapsedTime > duration) {
        element.textContent = formatCurrency(end);
        return;
      }
      
      // Cálculo con efecto de easing
      const progress = elapsedTime / duration;
      const easedProgress = -Math.cos(progress * Math.PI) / 2 + 0.5;
      const currentValue = Math.round(start + change * easedProgress);
      
      element.textContent = formatCurrency(currentValue);
      requestAnimationFrame(updateCounter);
    };
    
    requestAnimationFrame(updateCounter);
    return end;
  };
  
  // Actualizar calculadora
  const updateCalculator = (amount: any) => {
    const bonus = Math.round(amount * 0.1);
    const total = amount + bonus;
    
    // Guardar valores para próxima animación
    currentDeposit = animateCounter('deposit-amount', currentDeposit, amount);
    currentBonus = animateCounter('bonus-amount', currentBonus, bonus);
    currentTotal = animateCounter('total-amount', currentTotal, total);
  };
  
  // Inicializar
  document.addEventListener('DOMContentLoaded', () => {
    // Configurar valor inicial
    setTimeout(() => {
      updateCalculator(amounts[0]);
    }, 500);
    
    // Iniciar ciclo de rotación
    setInterval(() => {
      currentIndex = (currentIndex + 1) % amounts.length;
      updateCalculator(amounts[currentIndex]);
    }, 4000); // Cambiar cada 4 segundos para permitir animación completa
  });
</script>

<script define:vars={{ pixelEvent }}>
  document.addEventListener('DOMContentLoaded', () => {
    // Para depuración
    console.log('Pixel event disponible:', pixelEvent);
    
    // Obtener el botón CTA
    const ctaButton = document.getElementById('cta-button');
    
    if (ctaButton) {
      ctaButton.addEventListener('click', (e) => {
        // Prevenir navegación inmediata
        e.preventDefault();
        
        // Usar una variable local para el evento
        const eventToTrack = pixelEvent || 'Lead';
        
        // Imprimir para depuración
        console.log('Tracking event:', eventToTrack);
        
        // Enviar el evento si fbq está disponible
        if (typeof fbq === 'function') {
          fbq('track', eventToTrack);
        }
        
        // Navegar después de un pequeño retraso
        setTimeout(() => {
          window.location.href = ctaButton.href;
        }, 300);
      });
    }
  });
</script>