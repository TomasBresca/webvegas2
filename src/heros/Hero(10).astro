---
//heros/Hero(1).astro
const { whatsappLink1, whatsappLink2, pixelEvent } = Astro.props;
import '../styles/global.css';
---
<section class="relative min-h-screen pt-32 sm:pt-36 md:pt-40 flex flex-col items-center bg-gradient-to-b from-casino-purple via-[#241554] to-[#1A0F36] overflow-hidden w-full">
  <!-- Elementos flotantes decorativos -->
  <div class="absolute inset-0 pointer-events-none">
    <div class="floating-element absolute top-1/4 left-10 w-12 h-12 opacity-30 animate-spin-slow">
      <img src="/images/chips.svg" alt="" class="w-full h-full" />
    </div>
    <div class="floating-element absolute top-2/3 right-12 w-16 h-16 opacity-20 animate-pulse-slow" style="animation-delay: 1s;">
      <img src="/images/ace.svg" alt="" class="w-full h-full" />
    </div>
    <div class="floating-element absolute bottom-1/4 left-1/3 w-14 h-14 opacity-25" style="animation-delay: 0.5s;">
      <img src="/images/gambling.svg" alt="" class="w-full h-full" />
    </div>
    <div class="floating-element absolute top-1/3 right-1/4 w-10 h-10 opacity-20" style="animation-delay: 1.5s;">
      <img src="/images/ace.svg" alt="" class="w-full h-full" />
    </div>
  </div>
  
  <!-- Efecto de luz de fondo -->
  <div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-full h-full max-w-lg max-h-lg bg-casino-gold/10 blur-[100px] rounded-full"></div>
  
  <!-- Textura de fondo unificada -->
  <div class="absolute inset-0 bg-felt-pattern opacity-10"></div>
  <div class="absolute inset-0 bg-dots-pattern opacity-5"></div>
  
  <div class="w-full px-5 max-w-4xl mx-auto flex flex-col items-center justify-center relative z-10 text-center">
    <!-- ELIGE TU CARTA Y GANA UN BONO -->
    <h1 class="text-3xl sm:text-4xl md:text-5xl mb-10 text-white uppercase hero-title font-extrabold tracking-wide">
      HAZ CLICK HASTA QUE <span class="gradient-text">EXPLOTE!</span>
    </h1>
    
    <!-- Bot√≥n de WhatsApp visible arriba de las cartas -->
    <div class="mb-8 w-full max-w-sm mx-auto">
      <a id="whatsapp-top-button" href={whatsappLink1} target="_blank" rel="noopener" class="flex items-center justify-center gap-2 bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-6 rounded-xl transition-all hover:scale-105 shadow-lg w-full">
        <svg width="24" height="24" viewBox="0 0 308 308" fill="white" xmlns="http://www.w3.org/2000/svg">
          <path d="M227.904,176.981c-0.6-0.288-23.054-11.345-27.044-12.781c-1.629-0.585-3.374-1.156-5.23-1.156c-3.032,0-5.579,1.511-7.563,4.479c-2.243,3.334-9.033,11.271-11.131,13.642c-0.274,0.313-0.648,0.687-0.872,0.687c-0.201,0-3.676-1.431-4.728-1.888c-24.087-10.463-42.37-35.624-44.877-39.867c-0.358-0.61-0.373-0.887-0.376-0.887c0.088-0.323,0.898-1.135,1.316-1.554c1.223-1.21,2.548-2.805,3.83-4.348c0.607-0.731,1.215-1.463,1.812-2.153c1.86-2.164,2.688-3.844,3.648-5.79l0.503-1.011c2.344-4.657,0.342-8.587-0.305-9.856c-0.531-1.062-10.012-23.944-11.02-26.348c-2.424-5.801-5.627-8.502-10.078-8.502c-0.413,0,0,0-1.732,0.073c-2.109,0.089-13.594,1.601-18.672,4.802c-5.385,3.395-14.495,14.217-14.495,33.249c0,17.129,10.87,33.302,15.537,39.453c0.116,0.155,0.329,0.47,0.638,0.922c17.873,26.102,40.154,45.446,62.741,54.469c21.745,8.686,32.042,9.69,37.896,9.69c0.001,0,0.001,0,0.001,0c2.46,0,4.429-0.193,6.166-0.364l1.102-0.105c7.512-0.666,24.02-9.22,27.775-19.655c2.958-8.219,3.738-17.199,1.77-20.458C233.168,179.508,230.845,178.393,227.904,176.981z" />
          <path d="M156.734,0C73.318,0,5.454,67.354,5.454,150.143c0,26.777,7.166,52.988,20.741,75.928L0.212,302.716c-0.484,1.429-0.124,3.009,0.933,4.085C1.908,307.58,2.943,308,4,308c0.405,0,0.813-0.061,1.211-0.188l79.92-25.396c21.87,11.685,46.588,17.853,71.604,17.853C240.143,300.27,308,232.923,308,150.143C308,67.354,240.143,0,156.734,0z M156.734,268.994c-23.539,0-46.338-6.797-65.936-19.657c-0.659-0.433-1.424-0.655-2.194-0.655c-0.407,0-0.815,0.062-1.212,0.188l-40.035,12.726l12.924-38.129c0.418-1.234,0.209-2.595-0.561-3.647c-14.924-20.392-22.813-44.485-22.813-69.677c0-65.543,53.754-118.867,119.826-118.867c66.064,0,119.812,53.324,119.812,118.867C276.546,215.678,222.799,268.994,156.734,268.994z" />
        </svg>
        CREAR USUARIO AHORA
      </a>
    </div>
    
    <!-- Globo inflable en lugar de cartas -->
    <div class="balloon-container relative h-[450px] sm:h-[500px] md:h-[550px] w-full flex items-center justify-center">
      <div id="balloon" class="balloon relative flex items-center justify-center cursor-pointer">
        <div class="balloon-shine"></div>
        <div class="balloon-inner">
          <span id="bonus-text" class="text-white text-xl font-bold shadow-text">BONO 2%</span>
        </div>
        <div class="balloon-knot"></div>
      </div>
      
      <!-- Container for explosion particles -->
      <div id="explosion-particles" class="explosion-particles"></div>
      
      <!-- Confetti container -->
      <div id="confetti-container" class="confetti-container"></div>
      
      <!-- Fireworks container -->
      <div id="fireworks-container" class="fireworks-container"></div>
    </div>
  </div>
  
  <!-- Modal de bono a pantalla completa -->
  <div id="bonus-modal" class="fixed inset-0 flex items-center justify-center z-50 opacity-0 pointer-events-none transition-opacity duration-500">
    <div class="modal-backdrop absolute inset-0 bg-black/80 backdrop-blur-md"></div>
    <div class="modal-card-container relative w-full h-full flex items-center justify-center">
      <!-- Carta central animada -->
      <div class="modal-card transform transition-all duration-700 scale-0">
        <div class="modal-card-inner relative bg-gradient-to-b from-[#281552] to-[#1A0F36] rounded-xl border-4 border-casino-gold/60 shadow-2xl overflow-hidden w-full max-w-lg mx-auto">
          <!-- Cabecera del modal -->
          <div class="modal-header bg-gradient-to-r from-[#281552] to-[#1E1040] p-6 text-center border-b border-casino-gold/30 relative">
            <button id="close-modal" class="absolute right-4 top-4 text-white hover:text-casino-gold transition-colors duration-200">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
            <h2 id="modal-title" class="text-3xl font-bold text-white">¬°<span class="bonus-name">BONO</span>!</h2>
          </div>
          
          <!-- Contenido del modal -->
          <div class="modal-content p-6">
            <div class="bonus-icon-container flex justify-center mb-6">
              <div class="bonus-icon w-24 h-24 rounded-full bg-gradient-to-br from-casino-gold/30 to-casino-gold/10 flex items-center justify-center">
                <div id="modal-icon" class="text-5xl">üéÅ</div>
              </div>
            </div>
            
            <div class="bonus-details text-center mb-8">
              <h3 id="modal-subtitle" class="text-xl text-white font-bold mb-4">¬°Felicidades has ganado tu bono!</h3>
              <p id="modal-description" class="text-white/90 text-lg mb-6">Hablanos al whatsapp pulsando el boton y crea tu usuario al instante</p>
              
              <div class="bonus-features space-y-4 text-left mb-8">
                <div class="feature flex items-center">
                  <div class="feature-icon w-10 h-10 bg-casino-gold/20 rounded-full flex items-center justify-center text-white mr-4">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                  </div>
                  <div id="feature-1" class="feature-text text-white/90">Caracter√≠stica 1</div>
                </div>
                
                <div class="feature flex items-center">
                  <div class="feature-icon w-10 h-10 bg-casino-gold/20 rounded-full flex items-center justify-center text-white mr-4">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                  </div>
                  <div id="feature-2" class="feature-text text-white/90">Caracter√≠stica 2</div>
                </div>
                
                <div class="feature flex items-center">
                  <div class="feature-icon w-10 h-10 bg-casino-gold/20 rounded-full flex items-center justify-center text-white mr-4">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                  </div>
                  <div id="feature-3" class="feature-text text-white/90">Caracter√≠stica 3</div>
                </div>
              </div>
            </div>
            
            <!-- Botones de acci√≥n -->
            <div class="modal-actions flex flex-col space-y-4">
              <a id="modal-cta" href={whatsappLink1} target="_blank" rel="noopener" class="cta-button w-full flex items-center justify-center gap-3 bg-gradient-to-r from-green-600 to-green-500 hover:from-green-500 hover:to-green-600 text-white text-xl font-bold py-4 px-6 rounded-xl transition-all hover:scale-105 shadow-xl">
                <svg width="24" height="24" viewBox="0 0 308 308" fill="white" xmlns="http://www.w3.org/2000/svg">
                  <path d="M227.904,176.981c-0.6-0.288-23.054-11.345-27.044-12.781c-1.629-0.585-3.374-1.156-5.23-1.156c-3.032,0-5.579,1.511-7.563,4.479c-2.243,3.334-9.033,11.271-11.131,13.642c-0.274,0.313-0.648,0.687-0.872,0.687c-0.201,0-3.676-1.431-4.728-1.888c-24.087-10.463-42.37-35.624-44.877-39.867c-0.358-0.61-0.373-0.887-0.376-0.887c0.088-0.323,0.898-1.135,1.316-1.554c1.223-1.21,2.548-2.805,3.83-4.348c0.607-0.731,1.215-1.463,1.812-2.153c1.86-2.164,2.688-3.844,3.648-5.79l0.503-1.011c2.344-4.657,0.342-8.587-0.305-9.856c-0.531-1.062-10.012-23.944-11.02-26.348c-2.424-5.801-5.627-8.502-10.078-8.502c-0.413,0,0,0-1.732,0.073c-2.109,0.089-13.594,1.601-18.672,4.802c-5.385,3.395-14.495,14.217-14.495,33.249c0,17.129,10.87,33.302,15.537,39.453c0.116,0.155,0.329,0.47,0.638,0.922c17.873,26.102,40.154,45.446,62.741,54.469c21.745,8.686,32.042,9.69,37.896,9.69c0.001,0,0.001,0,0.001,0c2.46,0,4.429-0.193,6.166-0.364l1.102-0.105c7.512-0.666,24.02-9.22,27.775-19.655c2.958-8.219,3.738-17.199,1.77-20.458C233.168,179.508,230.845,178.393,227.904,176.981z" />
                  <path d="M156.734,0C73.318,0,5.454,67.354,5.454,150.143c0,26.777,7.166,52.988,20.741,75.928L0.212,302.716c-0.484,1.429-0.124,3.009,0.933,4.085C1.908,307.58,2.943,308,4,308c0.405,0,0.813-0.061,1.211-0.188l79.92-25.396c21.87,11.685,46.588,17.853,71.604,17.853C240.143,300.27,308,232.923,308,150.143C308,67.354,240.143,0,156.734,0z M156.734,268.994c-23.539,0-46.338-6.797-65.936-19.657c-0.659-0.433-1.424-0.655-2.194-0.655c-0.407,0-0.815,0.062-1.212,0.188l-40.035,12.726l12.924-38.129c0.418-1.234,0.209-2.595-0.561-3.647c-14.924-20.392-22.813-44.485-22.813-69.677c0-65.543,53.754-118.867,119.826-118.867c66.064,0,119.812,53.324,119.812,118.867C276.546,215.678,222.799,268.994,156.734,268.994z" />
                </svg>
                CREAR USUARIO
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script define:vars={{ pixelEvent }}>
  document.addEventListener('DOMContentLoaded', () => {
    const balloon = document.getElementById('balloon');
    const bonusText = document.getElementById('bonus-text');
    const bonusModal = document.getElementById('bonus-modal');
    const modalCard = document.querySelector('.modal-card');
    const closeModalBtn = document.getElementById('close-modal');
    const explosionParticles = document.getElementById('explosion-particles');
    const confettiContainer = document.getElementById('confetti-container');
    const fireworksContainer = document.getElementById('fireworks-container');
    const mainWhatsappLink = document.querySelector('#modal-cta')?.getAttribute('href') || '';
    
    let clickCount = 1; // Start at 1 (2% on screen)
    let gameActive = true;
    let gameEnded = false;
    
    console.log('Globo inicializado. Porcentaje inicial: 2%');
    
    // Funci√≥n para crear part√≠culas de explosi√≥n
    function createExplosionParticles() {
      if (explosionParticles) explosionParticles.innerHTML = '';
      
      const numParticles = Math.floor(Math.random() * 11) + 30; // M√°s part√≠culas (30-40)
      console.log(`Generando ${numParticles} part√≠culas de explosi√≥n`);
      
      for (let i = 0; i < numParticles; i++) {
        const particle = document.createElement('div');
        particle.classList.add('particle');
        
        // Colores aleatorios
        const hue = Math.random() > 0.5 ? '354' : '335';
        const saturation = Math.floor(Math.random() * 30) + 70;
        const lightness = Math.floor(Math.random() * 30) + 50;
        particle.style.backgroundColor = `hsl(${hue}, ${saturation}%, ${lightness}%)`;
        
        // Tama√±o aleatorio (5-15px)
        const size = Math.floor(Math.random() * 11) + 5;
        particle.style.width = `${size}px`;
        particle.style.height = `${size}px`;
        
        // Posici√≥n inicial (centro del globo)
        particle.style.left = '50%';
        particle.style.top = '50%';
        
        // Direcci√≥n aleatoria
        const angle = Math.random() * Math.PI * 2;
        const speed = 10 + Math.random() * 30;
        
        // Calcular la direcci√≥n X e Y
        const vx = Math.cos(angle) * speed;
        const vy = Math.sin(angle) * speed;
        
        // Aplicar animaci√≥n
        particle.style.animation = 'particle-fly 1s forwards cubic-bezier(0.175, 0.885, 0.32, 1.275)';
        particle.style.transform = `translate(0, 0)`;
        
        // Retraso aleatorio
        const delay = Math.random() * 0.3;
        particle.style.animationDelay = `${delay}s`;
        
        // Establecer la trayectoria final
        setTimeout(() => {
          particle.style.transform = `translate(${vx * 10}px, ${vy * 10}px)`;
        }, 50);
        
        explosionParticles.appendChild(particle);
      }
    }
    
    // Funci√≥n mejorada para crear confeti, evitando acumulaciones en los bordes
    function createConfetti() {
      if (!confettiContainer) return;
      
      confettiContainer.innerHTML = '';
      console.log('Generando confeti distribuido uniformemente');
      
      const colors = ['#FFD700', '#FF6B8B', '#4CAF50', '#2196F3', '#9C27B0', '#FF9800'];
      const numConfetti = 150;
      
      // Obtener las dimensiones del viewport
      const viewportWidth = window.innerWidth;
      
      // Establecer margen de seguridad para evitar concentraci√≥n en bordes
      const safeMargin = 50; // 50px de margen en cada borde
      const safeWidth = viewportWidth - (safeMargin * 2);
      
      for (let i = 0; i < numConfetti; i++) {
        const confetti = document.createElement('div');
        
        // Distribuci√≥n horizontal centrada con m√°rgenes de seguridad
        const horizontalPosition = safeMargin + (Math.random() * safeWidth);
        
        // Tama√±o aleatorio
        const size = Math.random() * 8 + 5; // 5-13px
        
        // Forma aleatoria
        const shape = Math.floor(Math.random() * 3);
        
        // Configuraci√≥n completa de cada confeti
        Object.assign(confetti.style, {
          position: 'absolute',
          left: `${horizontalPosition}px`,
          top: `-${Math.random() * 50 + 20}px`, // Empezar fuera de la pantalla en la parte superior
          width: `${size}px`,
          height: shape === 2 ? `${size * 1.5}px` : `${size}px`,
          backgroundColor: colors[Math.floor(Math.random() * colors.length)],
          borderRadius: shape === 0 ? '0' : shape === 1 ? '50%' : `${size * 0.25}px`,
          opacity: '0.8',
          zIndex: '9999',
          transform: `rotate(${Math.random() * 360}deg)`,
          pointerEvents: 'none'
        });
        
        // Movimiento horizontal limitado (-100px a +100px) para evitar clustering
        const xMovement = (Math.random() * 200) - 100;
        
        // Duraci√≥n y retraso aleatorio
        const duration = 2 + Math.random() * 2;
        const delay = Math.random() * 1.5;
        
        // A√±adir al DOM primero
        confettiContainer.appendChild(confetti);
        
        // Configurar animaci√≥n con transiciones suaves
        confetti.style.transition = `
          top ${duration}s linear ${delay}s, 
          left ${duration}s ease-out ${delay}s, 
          transform ${duration}s linear ${delay}s, 
          opacity ${duration}s ease-in ${delay + duration * 0.7}s
        `;
        
        // Aplicar posici√≥n final con tiempos aleatorios
        setTimeout(() => {
          // Evitar que el confeti se salga demasiado por los lados
          const finalLeft = Math.max(safeMargin * 0.5, Math.min(viewportWidth - safeMargin * 0.5, horizontalPosition + xMovement));
          
          confetti.style.top = `${window.innerHeight + 20}px`;
          confetti.style.left = `${finalLeft}px`;
          confetti.style.transform = `rotate(${Math.random() * 720 + 360}deg)`;
          confetti.style.opacity = '0';
        }, 10);
        
        // Limpiar el confeti despu√©s de la animaci√≥n
        setTimeout(() => {
          if (confetti.parentNode) {
            confetti.remove();
          }
        }, (delay + duration + 0.5) * 1000);
      }
    }
    
    // Funci√≥n para crear fuegos artificiales
    function createFireworks() {
      if (!fireworksContainer) return;
      
      fireworksContainer.innerHTML = '';
      console.log('Generando fuegos artificiales');
      
      // N√∫mero de fuegos artificiales
      const numFireworks = 5;
      
      for (let i = 0; i < numFireworks; i++) {
        setTimeout(() => {
          // Crear el contenedor del fuego artificial
          const firework = document.createElement('div');
          firework.classList.add('firework');
          
          // Posici√≥n aleatoria
          const posX = 15 + Math.random() * 70; // 15-85% para mantenerlos dentro de la pantalla
          const posY = 15 + Math.random() * 50; // 15-65% para mantenerlos en la parte superior
          firework.style.left = `${posX}%`;
          firework.style.top = `${posY}%`;
          
          // Color aleatorio para este fuego artificial
          const hue = Math.floor(Math.random() * 360);
          
          // Crear las part√≠culas de la explosi√≥n
          const numParticles = 30 + Math.floor(Math.random() * 20); // 30-50 part√≠culas
          
          for (let j = 0; j < numParticles; j++) {
            const particle = document.createElement('div');
            particle.classList.add('firework-particle');
            
            // Variaci√≥n de color
            const colorVariation = Math.floor(Math.random() * 30) - 15; // +/- 15 de variaci√≥n
            const finalHue = (hue + colorVariation) % 360;
            const saturation = 80 + Math.floor(Math.random() * 20); // 80-100%
            const lightness = 50 + Math.floor(Math.random() * 20); // 50-70%
            
            particle.style.backgroundColor = `hsl(${finalHue}, ${saturation}%, ${lightness}%)`;
            particle.style.boxShadow = `0 0 6px 1px hsl(${finalHue}, ${saturation}%, ${lightness}%)`;
            
            // Tama√±o aleatorio
            const size = 2 + Math.random() * 4;
            particle.style.width = `${size}px`;
            particle.style.height = `${size}px`;
            
            // √Ångulo aleatorio para distribuci√≥n de 360 grados
            const angle = (j / numParticles) * Math.PI * 2;
            const distance = 30 + Math.random() * 50; // 30-80px
            
            // Posici√≥n final basada en el √°ngulo y distancia
            const destX = Math.cos(angle) * distance;
            const destY = Math.sin(angle) * distance;
            
            // Duraci√≥n aleatoria
            const duration = 0.5 + Math.random() * 0.5; // 0.5-1s
            
            // Establecer la animaci√≥n
            particle.style.transform = 'translate(0, 0)';
            particle.style.transition = `transform ${duration}s cubic-bezier(0.175, 0.885, 0.32, 1.275), opacity ${duration}s ease-out`;
            
            // Establecer la posici√≥n final despu√©s de un peque√±o retraso
            setTimeout(() => {
              particle.style.transform = `translate(${destX}px, ${destY}px)`;
              particle.style.opacity = '0';
            }, 10);
            
            firework.appendChild(particle);
          }
          
          fireworksContainer.appendChild(firework);
          
          // Eliminar el fuego artificial despu√©s de la animaci√≥n
          setTimeout(() => {
            firework.remove();
          }, 2000);
          
        }, i * 300); // Escalonar las explosiones
      }
    }
    
    // Configurar el bot√≥n de WhatsApp superior
    const topWhatsappButton = document.getElementById('whatsapp-top-button');
    if (topWhatsappButton) {
      topWhatsappButton.addEventListener('click', (e) => {
        e.preventDefault();
        
        const eventToTrack = pixelEvent || 'Lead';
        console.log(`Tracking event desde bot√≥n superior: ${eventToTrack}`);
        
        if (typeof fbq === 'function') {
          fbq('track', eventToTrack);
        }
        
        setTimeout(() => {
          window.open(topWhatsappButton.href, '_blank');
        }, 300);
      });
    }
    
    // Obtener el bot√≥n
    const ctaButton = document.getElementById('modal-cta');
    
    if (ctaButton) {
      ctaButton.addEventListener('click', (e) => {
        e.preventDefault();
        
        const eventToTrack = pixelEvent || 'Lead';
        console.log(`Tracking event: ${eventToTrack}`);
        
        if (typeof fbq === 'function') {
          fbq('track', eventToTrack);
        }
        
        setTimeout(() => {
          window.location.href = ctaButton.href;
        }, 300);
      });
    }
    
    // Datos de los bonos
    const bonusData = {
      'balloon': {
        name: '10% BONO',
        icon: 'üéà',
        subtitle: '¬°Felicidades has ganado tu bono!',
        description: 'Hablanos al whatsapp pulsando el boton y crea tu usuario al instante',
        features: [
          'V√°lido para cualquier monto de carga',
          'Sin requisitos adicionales',
          'Act√≠valo inmediatamente al crear tu usuario'
        ],
        ctaLink: ''
      }
    };
    
    // Funci√≥n para inflar el globo
    function inflateBalloon() {
      // Calculamos el bono (2%, 4%, 6%, 8%, 10%)
      const bonusPercentage = clickCount * 2;
      
      // Calculamos el tama√±o seg√∫n el n√∫mero de clicks (1-5)
      // Base m√°s grande (150px) y crece 40px por click
      const size = 150 + (clickCount * 40); 
      balloon.style.width = `${size}px`;
      balloon.style.height = `${size}px`;
      
      // Color m√°s intenso a medida que se infla
      const intensity = 60 + (clickCount * 8); // 68-100%
      balloon.style.background = `radial-gradient(ellipse at 30% 30%, #ff6b8b 0%, #cc2a5d ${intensity}%, #a01f46 100%)`;
      
      // Efecto de tensi√≥n en el globo
      balloon.style.boxShadow = `0 10px 30px rgba(0, 0, 0, 0.3), 
                                inset 0 -15px 30px rgba(0, 0, 0, ${0.2 + (clickCount * 0.04)}), 
                                inset 0 5px 15px rgba(255, 255, 255, ${0.3 - (clickCount * 0.04)})`;
      
      // Actualizamos el texto del bono
      bonusText.textContent = `BONO ${bonusPercentage}%`;
      bonusText.style.fontSize = `${1.2 + (clickCount * 0.1)}rem`;
      
      // A√±adir animaci√≥n de pulso para el feedback
      balloon.classList.add('balloon-pulse');
      setTimeout(() => {
        balloon.classList.remove('balloon-pulse');
      }, 300);
      
      // A√±adir efecto de "temblor" cuando est√° casi a punto de explotar
      if (clickCount >= 4) {
        balloon.classList.add('balloon-shake');
      }
      
      console.log(`Globo inflado: Click ${clickCount}, Porcentaje: ${bonusPercentage}%, Tama√±o: ${size}px`);
    }
    
    // Funci√≥n para mostrar el modal con los detalles del bono
    function showBonusModal(balloonType) {
      const bonus = bonusData[balloonType];
      
      if (!bonus) return;
      
      // Actualizar el nombre del bono con 10% fijo
      const finalBonus = '10% BONO';
      
      // Actualizar contenido del modal
      const bonusNameElement = document.querySelector('.bonus-name');
      if (bonusNameElement) bonusNameElement.textContent = finalBonus;
      
      const modalIcon = document.getElementById('modal-icon');
      const modalSubtitle = document.getElementById('modal-subtitle');
      const modalDescription = document.getElementById('modal-description');
      const feature1 = document.getElementById('feature-1');
      const feature2 = document.getElementById('feature-2');
      const feature3 = document.getElementById('feature-3');
      
      if (modalIcon) modalIcon.textContent = bonus.icon;
      if (modalSubtitle) modalSubtitle.textContent = bonus.subtitle;
      if (modalDescription) modalDescription.textContent = bonus.description;
      if (feature1) feature1.textContent = bonus.features[0];
      if (feature2) feature2.textContent = bonus.features[1];
      if (feature3) feature3.textContent = bonus.features[2];
      
      // Actualizar link de CTA
      const ctaButton = document.getElementById('modal-cta');
      if (ctaButton) {
        ctaButton.href = mainWhatsappLink;
      }
      
      // Mostrar el modal con animaci√≥n
      if (bonusModal) {
        bonusModal.classList.remove('opacity-0', 'pointer-events-none');
        setTimeout(() => {
          if (modalCard) modalCard.classList.add('scale-100');
        }, 100);
      }
      
      console.log(`Modal mostrado con bono de 10%`);
    }
    
    // Cerrar el modal
    function closeModal() {
      if (modalCard) modalCard.classList.remove('scale-100');
      
      setTimeout(() => {
        if (bonusModal) bonusModal.classList.add('opacity-0', 'pointer-events-none');
        console.log('Modal cerrado');
      }, 300);
    }
    
    // Inicializar el globo
    inflateBalloon();
    
    // Manejar el click en el globo
    if (balloon) {
      balloon.addEventListener('click', () => {
        if (!gameActive) return;
        
        // A√±adir efecto de halo al hacer clic
        balloon.classList.add('click-effect');
        setTimeout(() => {
          balloon.classList.remove('click-effect');
        }, 500);
        
        // Incrementar contador
        clickCount++;
        
        // Sonido (opcional, utilizando vibraci√≥n en dispositivos m√≥viles)
        if (window.navigator && window.navigator.vibrate) {
          navigator.vibrate(50); // Vibrar 50ms
        }
        
        console.log(`Click en globo: ${clickCount}`);
        
        // Comprobar si hemos llegado a 5 clicks (que ser√≠a 10%)
        if (clickCount > 5) {
          // Mostrar el 10% final en el globo
          bonusText.textContent = 'BONO 10%';
          
          // Marcar juego como terminado
          gameActive = false;
          gameEnded = true;
          
          // Quitar el efecto de temblor
          balloon.classList.remove('balloon-shake');
          
          // Crear efecto de explosi√≥n con part√≠culas
          createExplosionParticles();
          
          // Lanzar confeti y fuegos artificiales
          createConfetti();
          createFireworks();
          
          // Explotar el globo con efecto mejorado
          balloon.classList.add('balloon-explode');
          
          console.log('¬°Globo explotado! Bono final: 10%');
          
          // Mostrar el modal despu√©s de la animaci√≥n de explosi√≥n
          setTimeout(() => {
            showBonusModal('balloon');
          }, 800);
        } else {
          // Solo inflar el globo
          inflateBalloon();
        }
      });
    }
    
    // Evento para cerrar el modal
    if (closeModalBtn) {
      closeModalBtn.addEventListener('click', closeModal);
    }
  });
</script>

<style>
  /* Textura de fondo de mesa de casino */
  .bg-felt-pattern {
    background-image: 
      radial-gradient(circle, rgba(25, 17, 45, 0.6) 1px, transparent 1px),
      radial-gradient(circle, rgba(25, 17, 45, 0.6) 1px, transparent 1px);
    background-size: 20px 20px;
    background-position: 0 0, 10px 10px;
  }

  /* Patr√≥n de puntos para fondo unificado */
  .bg-dots-pattern {
    background-image: 
      radial-gradient(circle, rgba(255, 208, 112, 0.15) 1px, transparent 1px);
    background-size: 30px 30px;
  }
  
  .gradient-text {
    background-image: linear-gradient(45deg, #FFD700, #FFB627);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    display: inline-block;
    position: relative;
  }
  
  .gradient-text::after {
    content: '';
    position: absolute;
    bottom: -3px;
    left: 0;
    width: 100%;
    height: 3px;
    background-image: linear-gradient(45deg, #FFD700, #FFB627);
    border-radius: 2px;
  }
  
  .hero-title {
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
    letter-spacing: 0.05em;
  }
  
  /* Estilos mejorados para el globo - m√°s grande para mobile first */
  .balloon-container {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
  
  .balloon {
    background: radial-gradient(ellipse at 30% 30%, #ff6b8b 0%, #cc2a5d 60%, #a01f46 100%);
    border-radius: 50%;
    width: 150px;  /* Tama√±o base m√°s grande */
    height: 150px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    box-shadow: 
      0 8px 25px rgba(0, 0, 0, 0.3),
      inset 0 -12px 20px rgba(0, 0, 0, 0.2),
      inset 0 5px 15px rgba(255, 255, 255, 0.3);
    position: relative;
    z-index: 10;
    cursor: pointer;
    transform-origin: center bottom;
    animation: float 3s ease-in-out infinite alternate;
    overflow: visible;
  }
  
  .balloon-inner {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    text-align: center;
    padding: 0.5rem;
    position: relative;
    z-index: 2;
  }
  
  .balloon-shine {
    position: absolute;
    top: 20%;
    left: 20%;
    width: 25%;
    height: 15%;
    background-color: rgba(255, 255, 255, 0.5);
    border-radius: 50%;
    transform: rotate(-25deg);
    opacity: 0.7;
    filter: blur(3px);
    z-index: 1;
  }
  
  .balloon-knot {
    position: absolute;
    bottom: -8px;
    left: 50%;
    transform: translateX(-50%);
    width: 16px;
    height: 16px;
    background-color: rgba(187, 35, 76, 0.9);
    border-radius: 40% 40% 50% 50%;
    z-index: 1;
  }
  
  .shadow-text {
    text-shadow: 
      0 1px 0 #000,
      0 -1px 0 #000,
      1px 0 0 #000,
      -1px 0 0 #000,
      0 2px 4px rgba(0, 0, 0, 0.5);
  }
  
  #bonus-text {
    font-size: 1.2rem; /* Texto m√°s grande para el globo m√°s grande */
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.6);
    font-weight: bold;
    color: white;
    letter-spacing: 0.5px;
    transition: font-size 0.3s ease;
  }
  
  /* Contendor de part√≠culas de explosi√≥n */
  .explosion-particles {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 20;
  }
  
  /* Estilo de part√≠culas */
  .particle {
    position: absolute;
    border-radius: 50%;
    opacity: 0.9;
    z-index: 30;
    transform: translate(-50%, -50%);
    transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  }
  
  /* Confetti container - corregido para cubrir toda la pantalla y quedar por encima del modal */
  .confetti-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1000; /* Valor m√°s alto que el modal (z-index: 50) */
    overflow: hidden;
  }
  
  /* Fireworks container */
  .fireworks-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 900; /* Tambi√©n por encima del modal pero por debajo del confeti */
    overflow: hidden;
  }
  
  /* Firework styles */
  .firework {
    position: absolute;
    width: 0;
    height: 0;
    z-index: 51;
  }
  
  .firework-particle {
    position: absolute;
    width: 4px;
    height: 4px;
    background-color: #FFD700;
    border-radius: 50%;
    transform: translate(0, 0);
    opacity: 1;
    z-index: 52;
    box-shadow: 0 0 6px 1px #FFD700;
  }
  
  /* Efecto de halo al hacer clic */
  .click-effect {
    box-shadow: 
      0 0 0 15px rgba(255, 107, 139, 0.5),
      0 8px 25px rgba(0, 0, 0, 0.3),
      inset 0 -12px 20px rgba(0, 0, 0, 0.2),
      inset 0 5px 15px rgba(255, 255, 255, 0.3);
  }
  
  /* Efecto de temblor cuando est√° a punto de explotar */
  .balloon-shake {
    animation: float 3s ease-in-out infinite alternate, shake 0.2s infinite;
  }
  
  @keyframes float {
    0% {
      transform: translateY(0) rotate(-1deg);
    }
    50% {
      transform: translateY(-10px) rotate(1deg);
    }
    100% {
      transform: translateY(-20px) rotate(-1deg);
    }
  }
  
  @keyframes shake {
    0%, 100% {
      transform: translateY(-10px) translateX(0);
    }
    25% {
      transform: translateY(-10px) translateX(-2px);
    }
    50% {
      transform: translateY(-10px) translateX(0);
    }
    75% {
      transform: translateY(-10px) translateX(2px);
    }
  }
  
  @keyframes particle-fly {
    0% {
      opacity: 1;
      transform: translate(-50%, -50%) scale(1);
    }
    100% {
      opacity: 0;
      transform: translate(var(--x, 100px), var(--y, 100px)) scale(0);
    }
  }
  
  .balloon-pulse {
    animation: pulse 0.3s ease-out;
  }
  
  @keyframes pulse {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.1);
    }
    100% {
      transform: scale(1);
    }
  }
  
  .balloon-explode {
    animation: explode 0.8s forwards;
  }
  
  @keyframes explode {
    0% {
      transform: scale(1);
      opacity: 1;
      filter: brightness(1);
    }
    10% {
      transform: scale(1.3);
      opacity: 1;
      filter: brightness(1.2);
    }
    30% {
      transform: scale(1.5);
      opacity: 0.9;
      filter: brightness(1.5);
    }
    50% {
      transform: scale(1.7);
      opacity: 0.7;
      filter: brightness(2);
    }
    100% {
      transform: scale(2);
      opacity: 0;
      filter: brightness(3);
    }
  }
  
  /* Modal de bono mejorado */
  .modal-backdrop {
    transition: opacity 0.5s ease;
  }
  
  .modal-card {
    transform-origin: center;
    transform: scale(0);
    transition: transform 0.7s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    width: 95%;
    max-width: 600px;
  }
  
  .modal-card.scale-100 {
    transform: scale(1);
  }
  
  .modal-card-inner {
    max-height: 90vh;
    overflow-y: auto;
    box-shadow: 0 10px 50px rgba(0, 0, 0, 0.8);
  }
  
  .bonus-icon {
    animation: pulse-glow 2s infinite alternate;
  }
  
  @keyframes pulse-glow {
    0% {
      box-shadow: 0 0 10px rgba(255, 208, 112, 0.5);
    }
    100% {
      box-shadow: 0 0 30px rgba(255, 208, 112, 0.8);
    }
  }
  
  .casino-gold {
    color: #FFD700;
  }
  
  .text-casino-gold {
    color: #FFD700;
  }
  
  /* Bot√≥n de acci√≥n */
  .cta-button {
    position: relative;
    overflow: hidden;
    box-shadow: 0 0 15px rgba(22, 163, 74, 0.5);
    font-size: 1.2rem;
    padding: 0.8rem;
  }
  
  .cta-button svg {
    width: 1.2rem;
    height: 1.2rem;
  }
  
  .cta-button::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
      to bottom right,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.2) 50%,
      rgba(255, 255, 255, 0) 100%
    );
    transform: rotate(45deg);
    animation: shine 3s infinite;
  }
  
  /* Animaciones */
  @keyframes shine {
    0% {
      left: -100%;
      top: -100%;
    }
    100% {
      left: 100%;
      top: 100%;
    }
  }
  
  @keyframes bounce-subtle {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }
  
  @keyframes pulse-slow {
    0%, 100% {
      opacity: 0.8;
    }
    50% {
      opacity: 1;
    }
  }
  
  @keyframes pop-in {
    0% {
      transform: scale(0);
    }
    70% {
      transform: scale(1.1);
    }
    100% {
      transform: scale(1);
    }
  }
  
  .animate-bounce-subtle {
    animation: bounce-subtle 2s infinite;
  }
  
  .animate-pulse-slow {
    animation: pulse-slow 2s infinite;
  }
  
  .animate-pop-in {
    animation: pop-in 0.5s forwards;
  }
  
  /* Bot√≥n de cierre del modal */
  #close-modal {
    transition: transform 0.2s ease;
  }
  
  #close-modal:hover {
    transform: scale(1.1);
  }
  
  /* Responsive - aumentando tama√±os para tablets y desktop */
  @media (min-width: 768px) {
    .balloon {
      width: 180px;
      height: 180px;
    }
    
    #bonus-text {
      font-size: 1.4rem;
    }
    
    .balloon-knot {
      width: 20px;
      height: 20px;
    }
  }
  
  @media (min-width: 1024px) {
    .balloon {
      width: 220px;
      height: 220px;
    }
    
    #bonus-text {
      font-size: 1.8rem;
    }
    
    .balloon-knot {
      width: 24px;
      height: 24px;
      bottom: -10px;
    }
  }
</style>