---
//heros/Hero(9).astro
const { whatsappLink1, whatsappLink2, pixelEvent } = Astro.props;
import '../styles/global.css';
---
<section class="relative min-h-screen flex flex-col items-center bg-gradient-to-b from-casino-purple via-[#241554] to-[#1A0F36] overflow-hidden w-full py-10 sm:py-16">
  <!-- Efectos de luz fluida en el fondo -->
  <div class="absolute inset-0 z-0 overflow-hidden">
    <div class="fluid-light fluid-red"></div>
    <div class="fluid-light fluid-blue"></div>
    <div class="fluid-light fluid-red-small"></div>
    <div class="fluid-light fluid-blue-small"></div>
  </div>
  
  <!-- Elementos flotantes decorativos -->
  <div class="absolute inset-0 pointer-events-none">
    <div class="floating-element absolute top-1/4 left-10 w-12 h-12 opacity-30">
      <img src="/images/chips.svg" alt="" class="w-full h-full" />
    </div>
    <div class="floating-element absolute top-2/3 right-12 w-16 h-16 opacity-20" style="animation-delay: 1s;">
      <img src="/images/ace.svg" alt="" class="w-full h-full" />
    </div>
    <div class="floating-element absolute bottom-1/4 left-1/3 w-14 h-14 opacity-25" style="animation-delay: 0.5s;">
      <img src="/images/gambling.svg" alt="" class="w-full h-full" />
    </div>
    <div class="floating-element absolute top-1/3 right-1/4 w-10 h-10 opacity-20" style="animation-delay: 1.5s;">
      <img src="/images/ace.svg" alt="" class="w-full h-full" />
    </div>
  </div>
  
  <!-- Efecto de luz de fondo -->
  <div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-full h-full max-w-lg max-h-lg bg-casino-gold/10 blur-[100px] rounded-full"></div>
  
  <!-- Textura de fondo unificada -->
  <div class="absolute inset-0 bg-felt-pattern opacity-10"></div>
  <div class="absolute inset-0 bg-dots-pattern opacity-5"></div>
  
  <div class="w-full px-5 max-w-4xl mx-auto flex flex-col items-center justify-center relative z-10 text-center">
    <!-- REVIENTA LOS GLOBOS Y GANA UN BONO -->
    <h1 class="text-3xl sm:text-4xl md:text-5xl mb-10 text-white uppercase hero-title font-extrabold tracking-wide">
      REVIENTA LOS GLOBOS Y <span class="gradient-text">GANA TU BONO!</span>
    </h1>
    
    <!-- Bot√≥n de WhatsApp visible arriba de los globos -->
    <div class="mb-8 w-full max-w-sm mx-auto">
      <a id="whatsapp-top-button" href={whatsappLink1} target="_blank" rel="noopener" class="flex items-center justify-center gap-2 bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-6 rounded-xl transition-all hover:scale-105 shadow-lg w-full">
        <svg width="24" height="24" viewBox="0 0 308 308" fill="white" xmlns="http://www.w3.org/2000/svg">
          <path d="M227.904,176.981c-0.6-0.288-23.054-11.345-27.044-12.781c-1.629-0.585-3.374-1.156-5.23-1.156c-3.032,0-5.579,1.511-7.563,4.479c-2.243,3.334-9.033,11.271-11.131,13.642c-0.274,0.313-0.648,0.687-0.872,0.687c-0.201,0-3.676-1.431-4.728-1.888c-24.087-10.463-42.37-35.624-44.877-39.867c-0.358-0.61-0.373-0.887-0.376-0.887c0.088-0.323,0.898-1.135,1.316-1.554c1.223-1.21,2.548-2.805,3.83-4.348c0.607-0.731,1.215-1.463,1.812-2.153c1.86-2.164,2.688-3.844,3.648-5.79l0.503-1.011c2.344-4.657,0.342-8.587-0.305-9.856c-0.531-1.062-10.012-23.944-11.02-26.348c-2.424-5.801-5.627-8.502-10.078-8.502c-0.413,0,0,0-1.732,0.073c-2.109,0.089-13.594,1.601-18.672,4.802c-5.385,3.395-14.495,14.217-14.495,33.249c0,17.129,10.87,33.302,15.537,39.453c0.116,0.155,0.329,0.47,0.638,0.922c17.873,26.102,40.154,45.446,62.741,54.469c21.745,8.686,32.042,9.69,37.896,9.69c0.001,0,0.001,0,0.001,0c2.46,0,4.429-0.193,6.166-0.364l1.102-0.105c7.512-0.666,24.02-9.22,27.775-19.655c2.958-8.219,3.738-17.199,1.77-20.458C233.168,179.508,230.845,178.393,227.904,176.981z" />
          <path d="M156.734,0C73.318,0,5.454,67.354,5.454,150.143c0,26.777,7.166,52.988,20.741,75.928L0.212,302.716c-0.484,1.429-0.124,3.009,0.933,4.085C1.908,307.58,2.943,308,4,308c0.405,0,0.813-0.061,1.211-0.188l79.92-25.396c21.87,11.685,46.588,17.853,71.604,17.853C240.143,300.27,308,232.923,308,150.143C308,67.354,240.143,0,156.734,0z M156.734,268.994c-23.539,0-46.338-6.797-65.936-19.657c-0.659-0.433-1.424-0.655-2.194-0.655c-0.407,0-0.815,0.062-1.212,0.188l-40.035,12.726l12.924-38.129c0.418-1.234,0.209-2.595-0.561-3.647c-14.924-20.392-22.813-44.485-22.813-69.677c0-65.543,53.754-118.867,119.826-118.867c66.064,0,119.812,53.324,119.812,118.867C276.546,215.678,222.799,268.994,156.734,268.994z" />
        </svg>
        CREAR USUARIO AHORA
      </a>
    </div>
    
    <!-- Texto de bono de fondo -->
    <div class="bonus-background absolute w-full h-full flex items-center justify-center">
      <div class="text-[15vw] sm:text-[10vw] font-bold text-casino-gold/10 tracking-widest">BONO 10%</div>
    </div>
    
    <!-- Contenedor de globos -->
    <div class="balloons-container relative h-[450px] sm:h-[500px] md:h-[550px] w-full">
      <!-- Globo 1 - Rojo -->
      <div class="balloon balloon-red" data-bonus="10% de bono" data-balloon-id="1">
        <div class="balloon-inner"></div>
        <div class="balloon-string"></div>
      </div>
      
      <!-- Globo 2 - Azul -->
      <div class="balloon balloon-blue" data-bonus="10% de bono" data-balloon-id="2">
        <div class="balloon-inner"></div>
        <div class="balloon-string"></div>
      </div>
      
      <!-- Globo 3 - Verde -->
      <div class="balloon balloon-green" data-bonus="10% de bono" data-balloon-id="3">
        <div class="balloon-inner"></div>
        <div class="balloon-string"></div>
      </div>
      
      <!-- Globo 4 - Amarillo -->
      <div class="balloon balloon-yellow" data-bonus="10% de bono" data-balloon-id="4">
        <div class="balloon-inner"></div>
        <div class="balloon-string"></div>
      </div>
      
      <!-- Globo 5 - Morado -->
      <div class="balloon balloon-purple" data-bonus="10% de bono" data-balloon-id="5">
        <div class="balloon-inner"></div>
        <div class="balloon-string"></div>
      </div>
    </div>
    
    <!-- Mensaje emergente cuando se va revelando el bono -->
    <div id="reveal-message" class="reveal-message opacity-0 pointer-events-none transition-opacity duration-500 mt-4 text-white text-xl font-bold">
      <span id="reveal-text">¬°Sigue reventando globos para descubrir tu bono!</span>
    </div>
  </div>
  
  <!-- Modal de bono a pantalla completa -->
  <div id="bonus-modal" class="fixed inset-0 flex items-center justify-center z-50 opacity-0 pointer-events-none transition-opacity duration-500">
    <div class="modal-backdrop absolute inset-0 bg-black/80 backdrop-blur-md"></div>
    <div class="modal-card-container relative w-full h-full flex items-center justify-center">
      <!-- Carta central animada -->
      <div class="modal-card transform transition-all duration-700 scale-0">
        <div class="modal-card-inner relative bg-gradient-to-b from-[#281552] to-[#1A0F36] rounded-xl border-4 border-casino-gold/60 shadow-2xl overflow-hidden w-full max-w-lg mx-auto">
          <!-- Cabecera del modal -->
          <div class="modal-header bg-gradient-to-r from-[#281552] to-[#1E1040] p-6 text-center border-b border-casino-gold/30 relative">
            <button id="close-modal" class="absolute right-4 top-4 text-white hover:text-casino-gold transition-colors duration-200">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
            <h2 id="modal-title" class="text-3xl font-bold text-white">¬°<span class="bonus-name">BONO</span>!</h2>
          </div>
          
          <!-- Contenido del modal -->
          <div class="modal-content p-6">
            <div class="bonus-icon-container flex justify-center mb-6">
              <div class="bonus-icon w-24 h-24 rounded-full bg-gradient-to-br from-casino-gold/30 to-casino-gold/10 flex items-center justify-center">
                <div id="modal-icon" class="text-5xl">üéÅ</div>
              </div>
            </div>
            
            <div class="bonus-details text-center mb-8">
              <h3 id="modal-subtitle" class="text-xl text-white font-bold mb-4">¬°Felicidades has ganado tu bono!</h3>
              <p id="modal-description" class="text-white/90 text-lg mb-6">Hablanos al whatsapp pulsando el boton y crea tu usuario al instante</p>
              
              <div class="bonus-features space-y-4 text-left mb-8">
                <div class="feature flex items-center">
                  <div class="feature-icon w-10 h-10 bg-casino-gold/20 rounded-full flex items-center justify-center text-white mr-4">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                  </div>
                  <div id="feature-1" class="feature-text text-white/90">Caracter√≠stica 1</div>
                </div>
                
                <div class="feature flex items-center">
                  <div class="feature-icon w-10 h-10 bg-casino-gold/20 rounded-full flex items-center justify-center text-white mr-4">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                  </div>
                  <div id="feature-2" class="feature-text text-white/90">Caracter√≠stica 2</div>
                </div>
                
                <div class="feature flex items-center">
                  <div class="feature-icon w-10 h-10 bg-casino-gold/20 rounded-full flex items-center justify-center text-white mr-4">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                  </div>
                  <div id="feature-3" class="feature-text text-white/90">Caracter√≠stica 3</div>
                </div>
              </div>
            </div>
            
            <!-- Botones de acci√≥n -->
            <div class="modal-actions flex flex-col space-y-4">
              <a id="modal-cta" href={whatsappLink1} target="_blank" rel="noopener" class="cta-button w-full flex items-center justify-center gap-3 bg-gradient-to-r from-green-600 to-green-500 hover:from-green-500 hover:to-green-600 text-white text-xl font-bold py-4 px-6 rounded-xl transition-all hover:scale-105 shadow-xl">
                <svg width="24" height="24" viewBox="0 0 308 308" fill="white" xmlns="http://www.w3.org/2000/svg">
                  <path d="M227.904,176.981c-0.6-0.288-23.054-11.345-27.044-12.781c-1.629-0.585-3.374-1.156-5.23-1.156c-3.032,0-5.579,1.511-7.563,4.479c-2.243,3.334-9.033,11.271-11.131,13.642c-0.274,0.313-0.648,0.687-0.872,0.687c-0.201,0-3.676-1.431-4.728-1.888c-24.087-10.463-42.37-35.624-44.877-39.867c-0.358-0.61-0.373-0.887-0.376-0.887c0.088-0.323,0.898-1.135,1.316-1.554c1.223-1.21,2.548-2.805,3.83-4.348c0.607-0.731,1.215-1.463,1.812-2.153c1.86-2.164,2.688-3.844,3.648-5.79l0.503-1.011c2.344-4.657,0.342-8.587-0.305-9.856c-0.531-1.062-10.012-23.944-11.02-26.348c-2.424-5.801-5.627-8.502-10.078-8.502c-0.413,0,0,0-1.732,0.073c-2.109,0.089-13.594,1.601-18.672,4.802c-5.385,3.395-14.495,14.217-14.495,33.249c0,17.129,10.87,33.302,15.537,39.453c0.116,0.155,0.329,0.47,0.638,0.922c17.873,26.102,40.154,45.446,62.741,54.469c21.745,8.686,32.042,9.69,37.896,9.69c0.001,0,0.001,0,0.001,0c2.46,0,4.429-0.193,6.166-0.364l1.102-0.105c7.512-0.666,24.02-9.22,27.775-19.655c2.958-8.219,3.738-17.199,1.77-20.458C233.168,179.508,230.845,178.393,227.904,176.981z" />
                  <path d="M156.734,0C73.318,0,5.454,67.354,5.454,150.143c0,26.777,7.166,52.988,20.741,75.928L0.212,302.716c-0.484,1.429-0.124,3.009,0.933,4.085C1.908,307.58,2.943,308,4,308c0.405,0,0.813-0.061,1.211-0.188l79.92-25.396c21.87,11.685,46.588,17.853,71.604,17.853C240.143,300.27,308,232.923,308,150.143C308,67.354,240.143,0,156.734,0z M156.734,268.994c-23.539,0-46.338-6.797-65.936-19.657c-0.659-0.433-1.424-0.655-2.194-0.655c-0.407,0-0.815,0.062-1.212,0.188l-40.035,12.726l12.924-38.129c0.418-1.234,0.209-2.595-0.561-3.647c-14.924-20.392-22.813-44.485-22.813-69.677c0-65.543,53.754-118.867,119.826-118.867c66.064,0,119.812,53.324,119.812,118.867C276.546,215.678,222.799,268.994,156.734,268.994z" />
                </svg>
                CREAR USUARIO
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script define:vars={{ pixelEvent }}>
  document.addEventListener('DOMContentLoaded', () => {
    const balloons = document.querySelectorAll('.balloon');
    const bonusModal = document.getElementById('bonus-modal');
    const modalCard = document.querySelector('.modal-card');
    const closeModalBtn = document.getElementById('close-modal');
    const revealMessage = document.getElementById('reveal-message');
    const revealText = document.getElementById('reveal-text');
    const mainWhatsappLink = document.querySelector('#modal-cta')?.getAttribute('href') || '';
    
    // Variables de control
    let poppedBalloons = 0;
    const totalBalloons = balloons.length;
    let allPopped = false;
    let isMobile = window.innerWidth < 768;

    // Para depuraci√≥n
    console.log('Pixel event disponible:', pixelEvent);
    console.log('Total de globos:', totalBalloons);
    console.log('Vista m√≥vil:', isMobile);
    
    // Configurar el bot√≥n de WhatsApp superior
    const topWhatsappButton = document.getElementById('whatsapp-top-button');
    if (topWhatsappButton) {
      topWhatsappButton.addEventListener('click', (e) => {
        // Prevenir navegaci√≥n inmediata
        e.preventDefault();
        
        // Usar una variable local para el evento
        const eventToTrack = pixelEvent || 'Lead';
        
        // Imprimir para depuraci√≥n
        console.log('Tracking event desde bot√≥n superior:', eventToTrack);
        
        // Enviar el evento si fbq est√° disponible
        if (typeof fbq === 'function') {
          fbq('track', eventToTrack);
        }
        
        // Navegar despu√©s de un peque√±o retraso
        setTimeout(() => {
          window.open(topWhatsappButton.href, '_blank');
        }, 300);
      });
    }
    
    // Obtener el bot√≥n CTA
    const ctaButton = document.getElementById('modal-cta');
    
    if (ctaButton) {
      ctaButton.addEventListener('click', (e) => {
        // Prevenir navegaci√≥n inmediata
        e.preventDefault();
        
        // Usar una variable local para el evento
        const eventToTrack = pixelEvent || 'Lead';
        
        // Imprimir para depuraci√≥n
        console.log('Tracking event:', eventToTrack);
        
        // Enviar el evento si fbq est√° disponible
        if (typeof fbq === 'function') {
          fbq('track', eventToTrack);
        }
        
        // Navegar despu√©s de un peque√±o retraso
        setTimeout(() => {
          window.location.href = ctaButton.href;
        }, 300);
      });
    }
    
    // Datos de los bonos
    const bonusData = {
      'default': {
        name: '10% BONO',
        icon: 'üéâ',
        subtitle: '¬°Felicidades has ganado tu bono!',
        description: 'Hablanos al whatsapp pulsando el boton y crea tu usuario al instante',
        features: [
          'V√°lido para cualquier monto de carga',
          'Sin requisitos adicionales',
          'Act√≠valo inmediatamente al crear tu usuario'
        ],
        ctaLink: ''
      }
    };
    
    // Mensajes de revelaci√≥n progresiva
    const revealMessages = [
      "¬°Sigue reventando globos para descubrir tu bono!",
      "¬°Est√°s m√°s cerca! Contin√∫a reventando globos",
      "¬°Ya casi! Solo faltan unos pocos globos",
      "¬°El premio est√° a punto de revelarse!",
      "¬°Lo lograste! ¬°Has ganado un BONO!"
    ];
    
    // Funci√≥n para distribuir los globos en el √°rea de juego
    function arrangeBalloons() {
      if (isMobile) {
        // Posicionamiento espec√≠fico para m√≥vil - m√°s centrado
        const mobilePositions = [
          { left: 0, top: 10 },  // Rojo - Superior centro-izquierda
          { left: 45, top: 5 },  // Azul - Superior derecha
          { left: 25, top: 30 },  // Verde - Centro
          { left: 10, top: 55 },  // Amarillo - Inferior izquierda
          { left: 60, top: 50 }   // Morado - Inferior derecha
        ];
        
        balloons.forEach((balloon, index) => {
          if (balloon instanceof HTMLElement) {
            const pos = mobilePositions[index];
            // A√±adir peque√±a variaci√≥n aleatoria
            const randomOffsetX = (Math.random() * 10) - 5;
            const randomOffsetY = (Math.random() * 10) - 5;
            
            balloon.style.left = `${pos.left + randomOffsetX}%`;
            balloon.style.top = `${pos.top + randomOffsetY}%`;
            
            // Tama√±o aleatorio para variedad 
            const sizeVariation = 0.95 + (Math.random() * 0.1);
            balloon.style.transform = `scale(${sizeVariation})`;
            
            // Animaci√≥n con retardo aleatorio
            balloon.style.animationDelay = `${Math.random() * 2}s`;
            
            // Hacemos visible cada globo con un peque√±o retardo
            setTimeout(() => {
              balloon.classList.add('balloon-visible');
            }, index * 150);
            
            console.log(`Globo m√≥vil ${index+1} posicionado en (${pos.left + randomOffsetX}%, ${pos.top + randomOffsetY}%)`);
          }
        });
      } else {
        // Posicionamiento para desktop - m√°s disperso y grande
        const desktopPositions = [
          { left: 10, top: 5 },  // Rojo - Izquierda
          { left: 50, top: 0 },  // Azul - Derecha
          { left: 35, top: 5 },  // Verde - Centro superior
          { left: 20, top: 40 },  // Amarillo - Inferior izquierda
          { left: 50, top: 35 }   // Morado - Inferior derecha
        ];
        
        balloons.forEach((balloon, index) => {
          if (balloon instanceof HTMLElement) {
            const pos = desktopPositions[index];
            // A√±adir peque√±a variaci√≥n aleatoria
            const randomOffsetX = (Math.random() * 8) - 4;
            const randomOffsetY = (Math.random() * 8) - 4;
            
            balloon.style.left = `${pos.left + randomOffsetX}%`;
            balloon.style.top = `${pos.top + randomOffsetY}%`;
            
            // Tama√±o aleatorio para variedad
            const sizeVariation = 0.95 + (Math.random() * 0.1);
            balloon.style.transform = `scale(${sizeVariation})`;
            
            // Animaci√≥n con retardo aleatorio
            balloon.style.animationDelay = `${Math.random() * 2}s`;
            
            // Hacemos visible cada globo con un peque√±o retardo
            setTimeout(() => {
              balloon.classList.add('balloon-visible');
            }, index * 150);
            
            console.log(`Globo desktop ${index+1} posicionado en (${pos.left + randomOffsetX}%, ${pos.top + randomOffsetY}%)`);
          }
        });
      }
    }
    
    // Funci√≥n para efectos de explosi√≥n de globo
    function popBalloon(balloon) {
      if (balloon instanceof HTMLElement) {
        // Reproducir sonido de explosi√≥n
        playPopSound();
        
        // Efecto visual de explosi√≥n
        const explosionEffect = document.createElement('div');
        explosionEffect.className = 'balloon-explosion';
        
        // Posicionar el efecto donde estaba el globo
        const balloonRect = balloon.getBoundingClientRect();
        const containerRect = document.querySelector('.balloons-container').getBoundingClientRect();
        
        explosionEffect.style.left = `${balloonRect.left - containerRect.left + balloonRect.width/2}px`;
        explosionEffect.style.top = `${balloonRect.top - containerRect.top + balloonRect.height/2}px`;
        
        // A√±adir el efecto al contenedor
        document.querySelector('.balloons-container').appendChild(explosionEffect);
        
        // Remover el globo con animaci√≥n
        balloon.classList.add('balloon-popped');
        
        // Incrementar contador y comprobar progreso
        poppedBalloons++;
        updateRevealMessage();
        
        // Eliminar el efecto despu√©s de la animaci√≥n
        setTimeout(() => {
          explosionEffect.remove();
        }, 1000);
        
        // Eliminar el globo del DOM despu√©s de la animaci√≥n
        setTimeout(() => {
          balloon.remove();
        }, 300);
        
        console.log(`Globo explotado! Progreso: ${poppedBalloons}/${totalBalloons}`);
        
        // Comprobar si todos los globos han sido explotados
        if (poppedBalloons === totalBalloons && !allPopped) {
          allPopped = true;
          setTimeout(showBonusModal, 800);
        }
      }
    }
    
    // Funci√≥n para actualizar el mensaje de revelaci√≥n
    function updateRevealMessage() {
      if (!revealMessage || !revealText) return;
      
      // Calcular √≠ndice de mensaje basado en progreso
      const progressRatio = poppedBalloons / totalBalloons;
      let messageIndex = Math.floor(progressRatio * revealMessages.length);
      
      // Asegurar √≠ndice v√°lido
      messageIndex = Math.min(messageIndex, revealMessages.length - 1);
      
      // Actualizar mensaje
      revealText.textContent = revealMessages[messageIndex];
      
      // Mostrar mensaje con animaci√≥n si no est√° visible
      if (revealMessage.classList.contains('opacity-0')) {
        revealMessage.classList.remove('opacity-0', 'pointer-events-none');
      } else {
        // Si ya est√° visible, a√±adir clase para un peque√±o efecto pulse
        revealText.classList.add('pulse-once');
        setTimeout(() => {
          revealText.classList.remove('pulse-once');
        }, 500);
      }
    }
    
    // Funci√≥n para mostrar el modal con los detalles del bono
    function showBonusModal() {
      const bonus = bonusData['default'];
      
      if (!bonus) return;
      
      // Actualizar contenido del modal
      const bonusNameElement = document.querySelector('.bonus-name');
      if (bonusNameElement) bonusNameElement.textContent = bonus.name;
      
      const modalIcon = document.getElementById('modal-icon');
      const modalSubtitle = document.getElementById('modal-subtitle');
      const modalDescription = document.getElementById('modal-description');
      const feature1 = document.getElementById('feature-1');
      const feature2 = document.getElementById('feature-2');
      const feature3 = document.getElementById('feature-3');
      
      if (modalIcon) modalIcon.textContent = bonus.icon;
      if (modalSubtitle) modalSubtitle.textContent = bonus.subtitle;
      if (modalDescription) modalDescription.textContent = bonus.description;
      if (feature1) feature1.textContent = bonus.features[0];
      if (feature2) feature2.textContent = bonus.features[1];
      if (feature3) feature3.textContent = bonus.features[2];
      
      // Actualizar link de CTA
      const ctaButton = document.getElementById('modal-cta');
      if (ctaButton) {
        ctaButton.href = mainWhatsappLink;
      }
      
      // Ocultar mensaje de revelaci√≥n
      if (revealMessage) {
        revealMessage.classList.add('opacity-0', 'pointer-events-none');
      }
      
      // Mostrar el modal con animaci√≥n
      if (bonusModal) {
        bonusModal.classList.remove('opacity-0', 'pointer-events-none');
        setTimeout(() => {
          if (modalCard) modalCard.classList.add('scale-100');
        }, 100);
      }
    }
    
    // Cerrar el modal
    function closeModal() {
      if (modalCard) modalCard.classList.remove('scale-100');
      
      setTimeout(() => {
        if (bonusModal) bonusModal.classList.add('opacity-0', 'pointer-events-none');
      }, 300);
    }
    
    // Detectar cambios de tama√±o de ventana
    window.addEventListener('resize', () => {
      const wasMobile = isMobile;
      isMobile = window.innerWidth < 768;
      
      // Si hubo un cambio entre m√≥vil y desktop, reorganizar los globos
      if (wasMobile !== isMobile && !allPopped) {
        console.log('Cambio de tama√±o detectado, reorganizando globos');
        // Primero ocultamos los globos actuales
        balloons.forEach(balloon => {
          if (balloon instanceof HTMLElement) {
            balloon.classList.remove('balloon-visible');
          }
        });
        
        // Luego reorganizamos despu√©s de un breve retardo
        setTimeout(() => {
          arrangeBalloons();
        }, 300);
      }
    });
    
    // Iniciar con los globos distribuidos
    arrangeBalloons();
    
    // Manejar click en globos
    balloons.forEach(balloon => {
      balloon.addEventListener('click', () => {
        if (!balloon.classList.contains('balloon-popped')) {
          popBalloon(balloon);
        }
      });
    });
    
    // Evento para cerrar el modal
    if (closeModalBtn) {
      closeModalBtn.addEventListener('click', closeModal);
    }
    
    // Funci√≥n para reproducir sonido de explosi√≥n
    function playPopSound() {
      try {
        const audio = new Audio();
        audio.src = "/sounds/pop.mp3"; // Aseg√∫rate de tener este archivo
        audio.volume = 0.3;
        audio.play().catch(e => console.log("Error reproduciendo sonido:", e));
      } catch (error) {
        console.log("No se pudo reproducir el sonido:", error);
      }
    }
  });
</script>

<style>
  /* Textura de fondo de mesa de casino */
  .bg-felt-pattern {
    background-image: 
      radial-gradient(circle, rgba(25, 17, 45, 0.6) 1px, transparent 1px),
      radial-gradient(circle, rgba(25, 17, 45, 0.6) 1px, transparent 1px);
    background-size: 20px 20px;
    background-position: 0 0, 10px 10px;
  }

  /* Patr√≥n de puntos para fondo unificado */
  .bg-dots-pattern {
    background-image: 
      radial-gradient(circle, rgba(255, 208, 112, 0.15) 1px, transparent 1px);
    background-size: 30px 30px;
  }
  
  .gradient-text {
    background-image: linear-gradient(45deg, #FFD700, #FFB627);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    display: inline-block;
    position: relative;
  }
  
  .gradient-text::after {
    content: '';
    position: absolute;
    bottom: -3px;
    left: 0;
    width: 100%;
    height: 3px;
    background-image: linear-gradient(45deg, #FFD700, #FFB627);
    border-radius: 2px;
  }
  
  .hero-title {
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
    letter-spacing: 0.05em;
  }
  
  /* Texto de bono de fondo */
  .bonus-background {
    pointer-events: none;
    z-index: 5;
    text-shadow: 0 4px 30px rgba(255, 215, 0, 0.3);
    line-height: 1;
    transform: rotate(-5deg);
  }
  
  /* Estilos de globos - Mobile First */
  .balloons-container {
    position: relative;
    width: 100%;
    height: 450px;
    overflow: visible;
    padding: 20px 0;
  }
  
  .balloon {
    position: absolute;
    width: 180px; /* Tama√±o base para mobile */
    height: 220px;
    cursor: pointer;
    opacity: 0;
    transition: transform 0.3s ease, opacity 0.5s ease;
    will-change: transform;
    animation: float-balloon 3s ease-in-out infinite alternate;
    z-index: 10;
  }
  
  .balloon-visible {
    opacity: 1;
  }
  
  .balloon-inner {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%;
    box-shadow: inset 0 5px 10px rgba(255, 255, 255, 0.5), 
                inset 0 -10px 20px rgba(0, 0, 0, 0.3);
    animation: balloon-shine 2s ease-in-out infinite alternate;
  }
  
  /* Hilos de globos mejorados */
  .balloon-string {
    position: absolute;
    width: 2px;
    height: 120px; /* M√°s largo para que se vea mejor */
    background: rgba(255, 255, 255, 0.9);
    bottom: -120px; /* Ajustado para alinearse correctamente */
    left: 50%;
    transform-origin: top center;
    transform: translateX(-50%);
    z-index: 5;
  }
  
  /* Colores de globos */
  .balloon-red .balloon-inner {
    background: linear-gradient(135deg, #ff5e5e, #ff0000);
    border: 1px solid #ff0000;
  }
  
  .balloon-blue .balloon-inner {
    background: linear-gradient(135deg, #5e8eff, #0044ff);
    border: 1px solid #0044ff;
  }
  
  .balloon-green .balloon-inner {
    background: linear-gradient(135deg, #5eff7a, #00a826);
    border: 1px solid #00a826;
  }
  
  .balloon-yellow .balloon-inner {
    background: linear-gradient(135deg, #ffea5e, #ffcc00);
    border: 1px solid #ffcc00;
  }
  
  .balloon-purple .balloon-inner {
    background: linear-gradient(135deg, #c75eff, #8800ff);
    border: 1px solid #8800ff;
  }
  
  /* Animaci√≥n de flotaci√≥n m√°s natural */
  @keyframes float-balloon {
    0% {
      transform: translateY(0) rotate(-1deg);
    }
    50% {
      transform: translateY(-10px) rotate(1deg);
    }
    100% {
      transform: translateY(-20px) rotate(-2deg);
    }
  }
  
  @keyframes balloon-shine {
    0% {
      background-position: 0% 0%;
    }
    100% {
      background-position: 100% 100%;
    }
  }
  
  /* Animaci√≥n sutil para el hilo */
  @keyframes string-sway {
    0% {
      transform: translateX(-50%) rotate(-1deg);
    }
    100% {
      transform: translateX(-50%) rotate(1deg);
    }
  }
  
  /* Efecto de explosi√≥n */
  .balloon-popped {
    transform: scale(0);
    opacity: 0;
    transition: transform 0.3s ease, opacity 0.3s ease;
  }
  
  .balloon-explosion {
    position: absolute;
    width: 180px;
    height: 180px;
    background: radial-gradient(circle, rgba(255,255,255,0.8) 0%, rgba(255,255,255,0) 70%);
    border-radius: 50%;
    animation: explosion 0.5s ease-out forwards;
    pointer-events: none;
    z-index: 20;
    transform: translate(-50%, -50%);
  }
  
  @keyframes explosion {
    0% {
      transform: translate(-50%, -50%) scale(0.3);
      opacity: 1;
    }
    100% {
      transform: translate(-50%, -50%) scale(2);
      opacity: 0;
    }
  }
  
  /* Mensaje de revelaci√≥n */
  .reveal-message {
    background: rgba(0, 0, 0, 0.6);
    padding: 10px 20px;
    border-radius: 8px;
    border: 1px solid rgba(255, 208, 112, 0.4);
    z-index: 30;
  }
  
  .pulse-once {
    animation: pulse-text 0.5s ease-in-out;
  }
  
  @keyframes pulse-text {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.1);
    }
    100% {
      transform: scale(1);
    }
  }
  
  /* Modal de bono mejorado */
  .modal-backdrop {
    transition: opacity 0.5s ease;
  }
  
  .modal-card {
    transform-origin: center;
    transform: scale(0);
    transition: transform 0.7s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    width: 95%;
    max-width: 600px;
  }
  
  .modal-card.scale-100 {
    transform: scale(1);
  }
  
  .modal-card-inner {
    max-height: 90vh;
    overflow-y: auto;
    box-shadow: 0 10px 50px rgba(0, 0, 0, 0.8);
  }
  
  .bonus-icon {
    animation: pulse-glow 2s infinite alternate;
  }
  
  @keyframes pulse-glow {
    0% {
      box-shadow: 0 0 10px rgba(255, 208, 112, 0.5);
    }
    100% {
      box-shadow: 0 0 30px rgba(255, 208, 112, 0.8);
    }
  }
  
  .casino-gold {
    color: #FFD700;
  }
  
  .text-casino-gold {
    color: #FFD700;
  }
  
  /* Bot√≥n de acci√≥n */
  .cta-button {
    position: relative;
    overflow: hidden;
    box-shadow: 0 0 15px rgba(22, 163, 74, 0.5);
    font-size: 1.2rem;
    padding: 0.8rem;
  }
  
  .cta-button svg {
    width: 1.2rem;
    height: 1.2rem;
  }
  
  .cta-button::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
      to bottom right,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.2) 50%,
      rgba(255, 255, 255, 0) 100%
    );
    transform: rotate(45deg);
    animation: shine 3s infinite;
  }
  
  /* Animaciones */
  @keyframes shine {
    0% {
      left: -100%;
      top: -100%;
    }
    100% {
      left: 100%;
      top: 100%;
    }
  }
  
  @keyframes bounce-subtle {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10px);
    }
  }
  
  @keyframes pulse-slow {
    0%, 100% {
      opacity: 0.8;
    }
    50% {
      opacity: 1;
    }
  }
  
  /* Bot√≥n de cierre del modal */
  #close-modal {
    transition: transform 0.2s ease;
  }
  
  #close-modal:hover {
    transform: scale(1.1);
  }
  
  /* Responsive - Globos mucho m√°s grandes en desktop */
  @media (min-width: 768px) {
    .balloon {
      width: 220px;  /* Globos m√°s grandes en desktop */
      height: 280px;
    }
    
    .balloon-string {
      height: 140px;
      bottom: -140px;
    }
    
    .balloon-explosion {
      width: 220px;
      height: 220px;
    }
  }
  
  @media (min-width: 1024px) {
    .balloon {
      width: 260px;  /* Globos a√∫n m√°s grandes en desktops grandes */
      height: 320px;
    }
    
    .balloon-string {
      height: 160px;
      bottom: -160px;
    }
    
    .balloon-explosion {
      width: 260px;
      height: 260px;
    }
  }
  
  /* Animaciones para elementos flotantes */
  .floating-element:nth-child(1) {
    animation: floatElement1 6s ease-in-out infinite;
  }
  
  .floating-element:nth-child(2) {
    animation: floatElement2 9s ease-in-out infinite;
  }
  
  .floating-element:nth-child(3) {
    animation: floatElement3 8s ease-in-out infinite;
  }
  
  .floating-element:nth-child(4) {
    animation: floatElement4 10s ease-in-out infinite;
  }
  
  @keyframes floatElement1 {
    0%, 100% { transform: translateY(0) rotate(0deg); }
    33% { transform: translateY(-15px) rotate(5deg); }
    66% { transform: translateY(5px) rotate(-5deg); }
  }
  
  @keyframes floatElement2 {
    0%, 100% { transform: translateY(0) rotate(0deg); }
    50% { transform: translateY(-20px) rotate(-8deg); }
  }
  
  @keyframes floatElement3 {
    0%, 100% { transform: translateY(0) rotate(0deg); }
    25% { transform: translateY(-10px) rotate(8deg); }
    75% { transform: translateY(-18px) rotate(-5deg); }
  }
  
  @keyframes floatElement4 {
    0%, 100% { transform: translateY(0) rotate(0deg) scale(1); }
    30% { transform: translateY(-15px) rotate(10deg) scale(1.1); }
    60% { transform: translateY(8px) rotate(-5deg) scale(0.95); }
  }
  
  /* Efectos de luz fluida (rojo y azul) */
  .fluid-light {
    position: absolute;
    border-radius: 100%;
    filter: blur(60px);
    opacity: 0.7;
    mix-blend-mode: screen;
  }
  
  .fluid-red {
    background: radial-gradient(circle, rgba(255, 50, 50, 1) 0%, rgba(180, 0, 0, 0.8) 60%, rgba(100, 0, 0, 0) 100%);
    width: 60vw;
    height: 60vw;
    max-width: 700px;
    max-height: 700px;
    top: 5%;
    left: 25%;
    animation: fluidMove1 5s ease-in-out infinite alternate;
  }
  
  .fluid-blue {
    background: radial-gradient(circle, rgba(50, 100, 255, 1) 0%, rgba(0, 40, 180, 0.8) 60%, rgba(0, 0, 100, 0) 100%);
    width: 55vw;
    height: 55vw;
    max-width: 650px;
    max-height: 650px;
    bottom: 10%;
    right: 10%;
    animation: fluidMove2 7s ease-in-out infinite alternate;
  }
  
  .fluid-red-small {
    background: radial-gradient(circle, rgba(255, 50, 50, 1) 0%, rgba(180, 0, 0, 0.8) 60%, rgba(100, 0, 0, 0) 100%);
    width: 35vw;
    height: 35vw;
    max-width: 400px;
    max-height: 400px;
    bottom: 15%;
    left: 10%;
    animation: fluidMove3 6s ease-in-out infinite alternate;
  }
  
  .fluid-blue-small {
    background: radial-gradient(circle, rgba(50, 100, 255, 1) 0%, rgba(0, 40, 180, 0.8) 60%, rgba(0, 0, 100, 0) 100%);
    width: 30vw;
    height: 30vw;
    max-width: 350px;
    max-height: 350px;
    top: 20%;
    right: 5%;
    animation: fluidMove4 8s ease-in-out infinite alternate;
  }
  
  @keyframes fluidMove1 {
    0% { transform: translate(-15%, -15%) rotate(0deg); }
    25% { transform: translate(0%, 15%) rotate(90deg); }
    50% { transform: translate(15%, 0%) rotate(180deg); }
    75% { transform: translate(0%, -15%) rotate(270deg); }
    100% { transform: translate(-15%, -15%) rotate(360deg); }
  }
  
  @keyframes fluidMove2 {
    0% { transform: translate(15%, 15%) rotate(0deg); }
    25% { transform: translate(0%, -15%) rotate(-90deg); }
    50% { transform: translate(-15%, 0%) rotate(-180deg); }
    75% { transform: translate(0%, 15%) rotate(-270deg); }
    100% { transform: translate(15%, 15%) rotate(-360deg); }
  }
  
  @keyframes fluidMove3 {
    0% { transform: translate(-12%, -12%) rotate(0deg); }
    33% { transform: translate(12%, 0%) rotate(120deg); }
    66% { transform: translate(0%, 12%) rotate(240deg); }
    100% { transform: translate(-12%, -12%) rotate(360deg); }
  }
  
  @keyframes fluidMove4 {
    0% { transform: translate(12%, 12%) rotate(0deg); }
    33% { transform: translate(-12%, 0%) rotate(-120deg); }
    66% { transform: translate(0%, -12%) rotate(-240deg); }
    100% { transform: translate(12%, 12%) rotate(-360deg); }
  }
  
  @media (max-width: 768px) {
    .fluid-red, .fluid-blue {
      width: 80vw;
      height: 80vw;
    }
    
    .fluid-red-small, .fluid-blue-small {
      width: 50vw;
      height: 50vw;
    }
  }
</style>