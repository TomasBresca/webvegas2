---
//heros/Hero(16).astro
const { whatsappLink1, whatsappLink2, pixelEvent } = Astro.props;
import '../styles/global.css';
---

<section class="relative min-h-screen pt-32 sm:pt-36 md:pt-40 flex flex-col items-center bg-gradient-to-b from-casino-purple via-[#241554] to-[#1A0F36] overflow-hidden w-full">
  <!-- Efectos de luz fluida en el fondo -->
  <div class="absolute inset-0 z-0 overflow-hidden">
    <div class="fluid-light fluid-red"></div>
    <div class="fluid-light fluid-blue"></div>
    <div class="fluid-light fluid-red-small"></div>
    <div class="fluid-light fluid-blue-small"></div>
  </div>
  
  <!-- Elementos flotantes decorativos -->
  <div class="absolute inset-0 pointer-events-none">
    <div class="floating-element absolute top-1/4 left-10 w-12 h-12 opacity-30">
      <img src="/images/chips.svg" alt="" class="w-full h-full" />
    </div>
    <div class="floating-element absolute top-2/3 right-12 w-16 h-16 opacity-20" style="animation-delay: 1s;">
      <img src="/images/ace.svg" alt="" class="w-full h-full" />
    </div>
    <div class="floating-element absolute bottom-1/4 left-1/3 w-14 h-14 opacity-25" style="animation-delay: 0.5s;">
      <img src="/images/gambling.svg" alt="" class="w-full h-full" />
    </div>
    <div class="floating-element absolute top-1/3 right-1/4 w-10 h-10 opacity-20" style="animation-delay: 1.5s;">
      <img src="/images/ace.svg" alt="" class="w-full h-full" />
    </div>
  </div>
  
  <!-- Efecto de luz de fondo -->
  <div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-full h-full max-w-lg max-h-lg bg-casino-gold/10 blur-[100px] rounded-full"></div>
  
  <!-- Textura de fondo unificada -->
  <div class="absolute inset-0 bg-felt-pattern opacity-10"></div>
  <div class="absolute inset-0 bg-dots-pattern opacity-5"></div>
  
  <div class="w-full px-5 max-w-4xl mx-auto flex flex-col items-center justify-center relative z-10 text-center">
    <!-- TITLE -->
    <h1 class="text-3xl sm:text-4xl md:text-5xl mb-10 text-white uppercase hero-title font-extrabold tracking-wide">
      APROVECHA Y <span class="gradient-text">GANA TU BONO!</span>
    </h1>
    
    <!-- Botón de WhatsApp visible arriba -->
    <div class="mb-8 w-full max-w-sm mx-auto">
      <a id="whatsapp-top-button" href={whatsappLink1} target="_blank" rel="noopener" class="flex items-center justify-center gap-2 bg-green-600 hover:bg-green-700 text-white font-bold py-4 px-6 rounded-xl transition-all hover:scale-105 shadow-lg w-full text-xl">
        <svg width="28" height="28" viewBox="0 0 308 308" fill="white" xmlns="http://www.w3.org/2000/svg">
          <path d="M227.904,176.981c-0.6-0.288-23.054-11.345-27.044-12.781c-1.629-0.585-3.374-1.156-5.23-1.156c-3.032,0-5.579,1.511-7.563,4.479c-2.243,3.334-9.033,11.271-11.131,13.642c-0.274,0.313-0.648,0.687-0.872,0.687c-0.201,0-3.676-1.431-4.728-1.888c-24.087-10.463-42.37-35.624-44.877-39.867c-0.358-0.61-0.373-0.887-0.376-0.887c0.088-0.323,0.898-1.135,1.316-1.554c1.223-1.21,2.548-2.805,3.83-4.348c0.607-0.731,1.215-1.463,1.812-2.153c1.86-2.164,2.688-3.844,3.648-5.79l0.503-1.011c2.344-4.657,0.342-8.587-0.305-9.856c-0.531-1.062-10.012-23.944-11.02-26.348c-2.424-5.801-5.627-8.502-10.078-8.502c-0.413,0,0,0-1.732,0.073c-2.109,0.089-13.594,1.601-18.672,4.802c-5.385,3.395-14.495,14.217-14.495,33.249c0,17.129,10.87,33.302,15.537,39.453c0.116,0.155,0.329,0.47,0.638,0.922c17.873,26.102,40.154,45.446,62.741,54.469c21.745,8.686,32.042,9.69,37.896,9.69c0.001,0,0.001,0,0.001,0c2.46,0,4.429-0.193,6.166-0.364l1.102-0.105c7.512-0.666,24.02-9.22,27.775-19.655c2.958-8.219,3.738-17.199,1.77-20.458C233.168,179.508,230.845,178.393,227.904,176.981z" />
          <path d="M156.734,0C73.318,0,5.454,67.354,5.454,150.143c0,26.777,7.166,52.988,20.741,75.928L0.212,302.716c-0.484,1.429-0.124,3.009,0.933,4.085C1.908,307.58,2.943,308,4,308c0.405,0,0.813-0.061,1.211-0.188l79.92-25.396c21.87,11.685,46.588,17.853,71.604,17.853C240.143,300.27,308,232.923,308,150.143C308,67.354,240.143,0,156.734,0z M156.734,268.994c-23.539,0-46.338-6.797-65.936-19.657c-0.659-0.433-1.424-0.655-2.194-0.655c-0.407,0-0.815,0.062-1.212,0.188l-40.035,12.726l12.924-38.129c0.418-1.234,0.209-2.595-0.561-3.647c-14.924-20.392-22.813-44.485-22.813-69.677c0-65.543,53.754-118.867,119.826-118.867c66.064,0,119.812,53.324,119.812,118.867C276.546,215.678,222.799,268.994,156.734,268.994z" />
        </svg>
        CREAR USUARIO AHORA
      </a>
    </div>
    
    <!-- Juego de carrera de caballos -->
    <div class="horse-racing-container relative h-[450px] sm:h-[500px] md:h-[550px] w-full flex flex-col items-center justify-center">
      <!-- Selección de caballo -->
      <div id="horse-selection" class="text-center mb-6">
        <h2 class="text-white text-2xl sm:text-3xl mb-5 font-bold">Elige tu caballo para la carrera</h2>
        <div class="flex items-center justify-center gap-4 flex-wrap">
          <div class="horse-option selected" data-horse="1">
            <div class="horse-icon">🏇</div>
            <div class="horse-name">Relámpago</div>
            <div class="horse-color">Rojo</div>
          </div>
          <div class="horse-option" data-horse="2">
            <div class="horse-icon">🐎</div>
            <div class="horse-name">Tornado</div>
            <div class="horse-color">Azul</div>
          </div>
          <div class="horse-option" data-horse="3">
            <div class="horse-icon">🐴</div>
            <div class="horse-name">Trueno</div>
            <div class="horse-color">Verde</div>
          </div>
          <div class="horse-option" data-horse="4">
            <div class="horse-icon">🦄</div>
            <div class="horse-name">Furia</div>
            <div class="horse-color">Morado</div>
          </div>
        </div>
      </div>
      
      <!-- Pista de carrera (oculta inicialmente) -->
      <div id="race-track" class="race-track hidden">
        <div class="finish-line"></div>
        <div class="track-lane" data-lane="1">
          <div class="horse horse-1" data-horse="1">🏇</div>
          <div class="lane-number">1</div>
          <div class="horse-label">Relámpago</div>
          <div class="horse-indicator red"></div>
        </div>
        <div class="track-lane" data-lane="2">
          <div class="horse horse-2" data-horse="2">🐎</div>
          <div class="lane-number">2</div>
          <div class="horse-label">Tornado</div>
          <div class="horse-indicator blue"></div>
        </div>
        <div class="track-lane" data-lane="3">
          <div class="horse horse-3" data-horse="3">🐴</div>
          <div class="lane-number">3</div>
          <div class="horse-label">Trueno</div>
          <div class="horse-indicator green"></div>
        </div>
        <div class="track-lane" data-lane="4">
          <div class="horse horse-4" data-horse="4">🦄</div>
          <div class="lane-number">4</div>
          <div class="horse-label">Furia</div>
          <div class="horse-indicator purple"></div>
        </div>
      </div>
      
      <!-- Mensaje de resultado (oculto inicialmente) -->
      <div id="race-result" class="race-result hidden">
        <h2 class="result-title">¡Tu caballo ha ganado!</h2>
        <p class="result-message">¡Felicidades! Has ganado el bono del 10%</p>
      </div>
      
      <!-- Botón para iniciar la carrera -->
      <div class="race-action-container">
        <button id="start-race-btn" class="start-race-btn bg-gradient-to-r from-casino-gold to-yellow-500 text-casino-purple hover:from-yellow-500 hover:to-casino-gold text-xl sm:text-2xl font-bold py-5 px-10 rounded-xl transition-all hover:scale-105 shadow-2xl flex items-center justify-center gap-3">
          <span class="race-icon">🏁</span>
          INICIAR CARRERA
        </button>
      </div>
    </div>
  </div>
  
  <!-- Modal de bono a pantalla completa -->
  <div id="bonus-modal" class="fixed inset-0 flex items-center justify-center z-50 opacity-0 pointer-events-none transition-opacity duration-500">
    <div class="modal-backdrop absolute inset-0 bg-black/80 backdrop-blur-md"></div>
    <div class="modal-card-container relative w-full h-full flex items-center justify-center">
      <!-- Carta central animada -->
      <div class="modal-card transform transition-all duration-700 scale-0">
        <div class="modal-card-inner relative bg-gradient-to-b from-[#281552] to-[#1A0F36] rounded-xl border-4 border-casino-gold/60 shadow-2xl overflow-hidden w-full max-w-lg mx-auto">
          <!-- Cabecera del modal -->
          <div class="modal-header bg-gradient-to-r from-[#281552] to-[#1E1040] p-6 text-center border-b border-casino-gold/30 relative">
            <button id="close-modal" class="absolute right-4 top-4 text-white hover:text-casino-gold transition-colors duration-200">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
            <h2 id="modal-title" class="text-3xl font-bold text-white">¡<span class="bonus-name">BONO</span>!</h2>
          </div>
          
          <!-- Contenido del modal -->
          <div class="modal-content p-6">
            <div class="bonus-icon-container flex justify-center mb-6">
              <div class="bonus-icon w-24 h-24 rounded-full bg-gradient-to-br from-casino-gold/30 to-casino-gold/10 flex items-center justify-center">
                <div id="modal-icon" class="text-5xl">🎁</div>
              </div>
            </div>
            
            <div class="bonus-details text-center mb-8">
              <h3 id="modal-subtitle" class="text-xl text-white font-bold mb-4">¡Felicidades has ganado tu bono!</h3>
              <p id="modal-description" class="text-white/90 text-lg mb-6">Hablanos al whatsapp pulsando el boton y crea tu usuario al instante</p>
              
              <div class="bonus-features space-y-4 text-left mb-8">
                <div class="feature flex items-center">
                  <div class="feature-icon w-10 h-10 bg-casino-gold/20 rounded-full flex items-center justify-center text-white mr-4">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                  </div>
                  <div id="feature-1" class="feature-text text-white/90">Válido para cualquier monto de carga</div>
                </div>
                
                <div class="feature flex items-center">
                  <div class="feature-icon w-10 h-10 bg-casino-gold/20 rounded-full flex items-center justify-center text-white mr-4">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                  </div>
                  <div id="feature-2" class="feature-text text-white/90">Sin requisitos adicionales</div>
                </div>
                
                <div class="feature flex items-center">
                  <div class="feature-icon w-10 h-10 bg-casino-gold/20 rounded-full flex items-center justify-center text-white mr-4">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                  </div>
                  <div id="feature-3" class="feature-text text-white/90">Actívalo inmediatamente al crear tu usuario</div>
                </div>
              </div>
            </div>
            
            <!-- Botones de acción -->
            <div class="modal-actions flex flex-col space-y-4">
              <a id="modal-cta" href={whatsappLink1} target="_blank" rel="noopener" class="cta-button w-full flex items-center justify-center gap-3 bg-gradient-to-r from-green-600 to-green-500 hover:from-green-500 hover:to-green-600 text-white text-xl font-bold py-4 px-6 rounded-xl transition-all hover:scale-105 shadow-xl">
                <svg width="24" height="24" viewBox="0 0 308 308" fill="white" xmlns="http://www.w3.org/2000/svg">
                  <path d="M227.904,176.981c-0.6-0.288-23.054-11.345-27.044-12.781c-1.629-0.585-3.374-1.156-5.23-1.156c-3.032,0-5.579,1.511-7.563,4.479c-2.243,3.334-9.033,11.271-11.131,13.642c-0.274,0.313-0.648,0.687-0.872,0.687c-0.201,0-3.676-1.431-4.728-1.888c-24.087-10.463-42.37-35.624-44.877-39.867c-0.358-0.61-0.373-0.887-0.376-0.887c0.088-0.323,0.898-1.135,1.316-1.554c1.223-1.21,2.548-2.805,3.83-4.348c0.607-0.731,1.215-1.463,1.812-2.153c1.86-2.164,2.688-3.844,3.648-5.79l0.503-1.011c2.344-4.657,0.342-8.587-0.305-9.856c-0.531-1.062-10.012-23.944-11.02-26.348c-2.424-5.801-5.627-8.502-10.078-8.502c-0.413,0,0,0-1.732,0.073c-2.109,0.089-13.594,1.601-18.672,4.802c-5.385,3.395-14.495,14.217-14.495,33.249c0,17.129,10.87,33.302,15.537,39.453c0.116,0.155,0.329,0.47,0.638,0.922c17.873,26.102,40.154,45.446,62.741,54.469c21.745,8.686,32.042,9.69,37.896,9.69c0.001,0,0.001,0,0.001,0c2.46,0,4.429-0.193,6.166-0.364l1.102-0.105c7.512-0.666,24.02-9.22,27.775-19.655c2.958-8.219,3.738-17.199,1.77-20.458C233.168,179.508,230.845,178.393,227.904,176.981z" />
                  <path d="M156.734,0C73.318,0,5.454,67.354,5.454,150.143c0,26.777,7.166,52.988,20.741,75.928L0.212,302.716c-0.484,1.429-0.124,3.009,0.933,4.085C1.908,307.58,2.943,308,4,308c0.405,0,0.813-0.061,1.211-0.188l79.92-25.396c21.87,11.685,46.588,17.853,71.604,17.853C240.143,300.27,308,232.923,308,150.143C308,67.354,240.143,0,156.734,0z M156.734,268.994c-23.539,0-46.338-6.797-65.936-19.657c-0.659-0.433-1.424-0.655-2.194-0.655c-0.407,0-0.815,0.062-1.212,0.188l-40.035,12.726l12.924-38.129c0.418-1.234,0.209-2.595-0.561-3.647c-14.924-20.392-22.813-44.485-22.813-69.677c0-65.543,53.754-118.867,119.826-118.867c66.064,0,119.812,53.324,119.812,118.867C276.546,215.678,222.799,268.994,156.734,268.994z" />
                </svg>
                CREAR USUARIO
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script define:vars={{ pixelEvent }}>
  document.addEventListener('DOMContentLoaded', () => {
    // Referencias a elementos del DOM
    const bonusModal = document.getElementById('bonus-modal');
    const modalCard = document.querySelector('.modal-card');
    const closeModalBtn = document.getElementById('close-modal');
    const mainWhatsappLink = document.querySelector('#modal-cta')?.getAttribute('href') || '';
    const startRaceBtn = document.getElementById('start-race-btn');
    const horseSelection = document.getElementById('horse-selection');
    const raceTrack = document.getElementById('race-track');
    const raceResult = document.getElementById('race-result');
    
    // Para depuración
    console.log('Pixel event disponible:', pixelEvent);
    
    // Variables para el juego
    let selectedHorse = 1; // Caballo seleccionado por defecto
    
    // Configurar el botón de WhatsApp superior
    const topWhatsappButton = document.getElementById('whatsapp-top-button');
    if (topWhatsappButton) {
      topWhatsappButton.addEventListener('click', (e) => {
        // Prevenir navegación inmediata
        e.preventDefault();
        
        // Usar una variable local para el evento
        const eventToTrack = pixelEvent || 'Lead';
        
        // Imprimir para depuración
        console.log('Tracking event desde botón superior:', eventToTrack);
        
        // Enviar el evento si fbq está disponible
        if (typeof fbq === 'function') {
          fbq('track', eventToTrack);
        }
        
        // Navegar después de un pequeño retraso
        setTimeout(() => {
          window.open(topWhatsappButton.href, '_blank');
        }, 300);
      });
    }
    
    // Obtener el botón CTA
    const ctaButton = document.getElementById('modal-cta');
    
    if (ctaButton) {
      ctaButton.addEventListener('click', (e) => {
        // Prevenir navegación inmediata
        e.preventDefault();
        
        // Usar una variable local para el evento
        const eventToTrack = pixelEvent || 'Lead';
        
        // Imprimir para depuración
        console.log('Tracking event:', eventToTrack);
        
        // Enviar el evento si fbq está disponible
        if (typeof fbq === 'function') {
          fbq('track', eventToTrack);
        }
        
        // Navegar después de un pequeño retraso
        setTimeout(() => {
          window.location.href = ctaButton.href;
        }, 300);
      });
    }
    
    // Datos de los bonos
    const bonusData = {
      'default': {
        name: '10% BONO',
        icon: '🎁',
        subtitle: '¡Felicidades has ganado tu bono!',
        description: 'Hablanos al whatsapp pulsando el boton y crea tu usuario al instante',
        features: [
          'Válido para cualquier monto de carga',
          'Sin requisitos adicionales',
          'Actívalo inmediatamente al crear tu usuario'
        ],
        ctaLink: ''
      }
    };
    
    // Función para mostrar el modal con los detalles del bono
    function showBonusModal() {
      const bonus = bonusData['default'];
      
      // Actualizar contenido del modal
      const bonusNameElement = document.querySelector('.bonus-name');
      if (bonusNameElement) bonusNameElement.textContent = bonus.name;
      
      const modalIcon = document.getElementById('modal-icon');
      const modalSubtitle = document.getElementById('modal-subtitle');
      const modalDescription = document.getElementById('modal-description');
      const feature1 = document.getElementById('feature-1');
      const feature2 = document.getElementById('feature-2');
      const feature3 = document.getElementById('feature-3');
      
      if (modalIcon) modalIcon.textContent = bonus.icon;
      if (modalSubtitle) modalSubtitle.textContent = bonus.subtitle;
      if (modalDescription) modalDescription.textContent = bonus.description;
      if (feature1) feature1.textContent = bonus.features[0];
      if (feature2) feature2.textContent = bonus.features[1];
      if (feature3) feature3.textContent = bonus.features[2];
      
      // Actualizar link de CTA
      const ctaButton = document.getElementById('modal-cta');
      if (ctaButton) {
        ctaButton.href = mainWhatsappLink;
      }
      
      // Mostrar el modal con animación
      if (bonusModal) {
        bonusModal.classList.remove('opacity-0', 'pointer-events-none');
        setTimeout(() => {
          if (modalCard) modalCard.classList.add('scale-100');
        }, 100);
      }
    }
    
    // Cerrar el modal
    function closeModal() {
      if (modalCard) modalCard.classList.remove('scale-100');
      
      setTimeout(() => {
        if (bonusModal) bonusModal.classList.add('opacity-0', 'pointer-events-none');
      }, 300);
    }
    
    // Selección de caballo
    const horseOptions = document.querySelectorAll('.horse-option');
    horseOptions.forEach(option => {
      option.addEventListener('click', () => {
        // Quitar selección anterior
        document.querySelector('.horse-option.selected')?.classList.remove('selected');
        // Establecer nueva selección
        option.classList.add('selected');
        // Guardar caballo seleccionado
        selectedHorse = parseInt(option.getAttribute('data-horse'));
        console.log('Caballo seleccionado:', selectedHorse);
      });
    });
    
    // Función para verificar orientación de la pantalla y ajustar el diseño
    function checkOrientation() {
      const isMobile = window.innerWidth < 768;
      const raceTrackElement = document.getElementById('race-track');
      
      if (raceTrackElement) {
        if (isMobile) {
          raceTrackElement.classList.add('vertical-track');
        } else {
          raceTrackElement.classList.remove('vertical-track');
        }
      }
    }
    
    // Verificar orientación al cargar
    checkOrientation();
    
    // Verificar orientación al cambiar tamaño de ventana
    window.addEventListener('resize', checkOrientation);
    
    // Iniciar carrera
    if (startRaceBtn) {
      startRaceBtn.addEventListener('click', () => {
        // Ocultar selección y mostrar pista
        horseSelection.classList.add('hidden');
        startRaceBtn.classList.add('hidden');
        raceTrack.classList.remove('hidden');
        
        // Destacar el caballo seleccionado por el usuario
        const selectedLane = document.querySelector(`.track-lane[data-lane="${selectedHorse}"]`);
        if (selectedLane) {
          selectedLane.classList.add('selected-lane');
        }
        
        // Preparar animación de carrera
        const horses = document.querySelectorAll('.horse');
        const raceTime = 5000; // 5 segundos de carrera
        const isMobile = window.innerWidth < 768;
        const finishLine = isMobile ? 85 : 85; // Punto de meta (%)
        let raceFinished = false;
        
        // Resetear posición inicial de los caballos
        horses.forEach(horse => {
          if (isMobile) {
            horse.style.top = '0%';
          } else {
            horse.style.left = '0%';
          }
        });
        
        console.log('Iniciando carrera - móvil:', isMobile);
        console.log('Caballo seleccionado para ganar:', selectedHorse);
        
        // Establecer velocidades aleatorias para cada caballo
        const speeds = {};
        horses.forEach(horse => {
          const horseId = parseInt(horse.getAttribute('data-horse'));
          // El caballo seleccionado siempre gana (velocidad más alta)
          if (horseId === selectedHorse) {
            speeds[horseId] = 100; // Velocidad máxima para el ganador
          } else {
            // Velocidades aleatorias para los otros caballos
            speeds[horseId] = Math.floor(Math.random() * 40) + 30; // Entre 30-70
          }
          console.log(`Caballo ${horseId} velocidad: ${speeds[horseId]}`);
        });
        
        let startTime = Date.now();
        let elapsedTime = 0;
        
        // Iniciar animación de carrera
        let raceInterval = setInterval(() => {
          elapsedTime = Date.now() - startTime;
          let raceProgress = Math.min(elapsedTime / raceTime, 1);
          
          let allFinished = true;
          
          horses.forEach(horse => {
            const horseId = parseInt(horse.getAttribute('data-horse'));
            const speedFactor = speeds[horseId] / 100;
            const position = raceProgress * finishLine * speedFactor;
            
            // Actualizar posición según la orientación
            if (isMobile) {
              horse.style.top = `${position}%`;
              
              // Comprobar si algún caballo aún no ha terminado
              if (position < finishLine) {
                allFinished = false;
              }
            } else {
              horse.style.left = `${position}%`;
              
              // Comprobar si algún caballo aún no ha terminado
              if (position < finishLine) {
                allFinished = false;
              }
            }
          });
          
          // Si todos los caballos han terminado o ha pasado el tiempo máximo
          if (allFinished || raceProgress >= 1) {
            clearInterval(raceInterval);
            
            if (!raceFinished) {
              raceFinished = true;
              console.log('Carrera finalizada');
              
              // Pequeña pausa antes de mostrar resultado
              setTimeout(() => {
                raceTrack.classList.add('hidden');
                raceResult.classList.remove('hidden');
                
                // Mostrar modal de bono después de 1.5 segundos
                setTimeout(() => {
                  showBonusModal();
                }, 1500);
              }, 1000);
            }
          }
        }, 33); // ~30 FPS para animación suave
      });
    }
    
    // Evento para cerrar el modal
    if (closeModalBtn) {
      closeModalBtn.addEventListener('click', closeModal);
    }
  });
</script>

<style>
  /* Textura de fondo de mesa de casino */
  .bg-felt-pattern {
    background-image: 
      radial-gradient(circle, rgba(25, 17, 45, 0.6) 1px, transparent 1px),
      radial-gradient(circle, rgba(25, 17, 45, 0.6) 1px, transparent 1px);
    background-size: 20px 20px;
    background-position: 0 0, 10px 10px;
  }

  /* Patrón de puntos para fondo unificado */
  .bg-dots-pattern {
    background-image: 
      radial-gradient(circle, rgba(255, 208, 112, 0.15) 1px, transparent 1px);
    background-size: 30px 30px;
  }
  
  .gradient-text {
    background-image: linear-gradient(45deg, #FFD700, #FFB627);
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    display: inline-block;
    position: relative;
  }
  
  .gradient-text::after {
    content: '';
    position: absolute;
    bottom: -3px;
    left: 0;
    width: 100%;
    height: 3px;
    background-image: linear-gradient(45deg, #FFD700, #FFB627);
    border-radius: 2px;
  }
  
  .hero-title {
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
    letter-spacing: 0.05em;
  }
  
  /* Estilos para juego de carrera de caballos */
  .horse-racing-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  
  /* Selección de caballos */
  #horse-selection {
    width: 100%;
    max-width: 600px;
  }
  
  .horse-option {
    display: inline-flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background: linear-gradient(to bottom, #1a0f36, #281552);
    border: 2px solid rgba(255, 215, 0, 0.2);
    border-radius: 12px;
    padding: 15px;
    margin: 8px;
    width: 110px;
    height: 130px;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  
  .horse-option:hover {
    transform: translateY(-5px);
    border-color: rgba(255, 215, 0, 0.5);
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.3), 0 0 10px rgba(255, 215, 0, 0.2);
  }
  
  .horse-option.selected {
    border-color: #FFD700;
    box-shadow: 0 0 20px rgba(255, 215, 0, 0.4);
    transform: scale(1.05);
  }
  
  .horse-icon {
    font-size: 2.5rem;
    margin-bottom: 8px;
  }
  
  .horse-name {
    font-size: 0.9rem;
    font-weight: 600;
    color: #ffffff;
  }
  
  .horse-color {
    font-size: 0.8rem;
    color: #ffffff;
    opacity: 0.7;
  }
  
  /* Indicadores de color para los caballos */
  .horse-indicator {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    position: absolute;
    left: 5px;
    top: 50%;
    transform: translateY(-50%);
  }
  
  .red { background-color: #e53e3e; }
  .blue { background-color: #3182ce; }
  .green { background-color: #38a169; }
  .purple { background-color: #805ad5; }
  
  /* Pista de carrera horizontal (predeterminada) */
  .race-track {
    width: 100%;
    max-width: 700px;
    height: 280px;
    background: linear-gradient(to right, #1a0f36, #281552);
    border: 3px solid rgba(255, 215, 0, 0.3);
    border-radius: 12px;
    position: relative;
    overflow: hidden;
    margin: 20px 0;
  }
  
  .finish-line {
    position: absolute;
    right: 10%;
    top: 0;
    bottom: 0;
    width: 5px;
    background: repeating-linear-gradient(
      to bottom,
      #fff,
      #fff 10px,
      #000 10px,
      #000 20px
    );
    z-index: 2;
  }
  
  .track-lane {
    position: relative;
    height: 25%;
    border-bottom: 1px dashed rgba(255, 215, 0, 0.2);
  }
  
  .track-lane:last-child {
    border-bottom: none;
  }
  
  .track-lane.selected-lane {
    background-color: rgba(255, 215, 0, 0.1);
  }
  
  .lane-number {
    position: absolute;
    left: 10px;
    top: 50%;
    transform: translateY(-50%);
    width: 25px;
    height: 25px;
    background-color: rgba(255, 215, 0, 0.2);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #FFD700;
    font-weight: bold;
    font-size: 0.9rem;
  }
  
  .horse-label {
    position: absolute;
    left: 40px;
    top: 50%;
    transform: translateY(-50%);
    color: white;
    font-size: 0.8rem;
    white-space: nowrap;
  }
  
  .horse {
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    font-size: 2rem;
    transition: left 0.05s linear, top 0.05s linear;
    z-index: 1;
  }
  
  /* Pista de carrera vertical (móvil) */
  .vertical-track {
    height: 400px;
    width: 90%;
  }
  
  .vertical-track .finish-line {
    left: 0;
    right: 0;
    bottom: 10%;
    top: auto;
    height: 5px;
    width: 100%;
    background: repeating-linear-gradient(
      to right,
      #fff,
      #fff 10px,
      #000 10px,
      #000 20px
    );
  }
  
  .vertical-track .track-lane {
    height: 100%;
    width: 25%;
    float: left;
    border-bottom: none;
    border-right: 1px dashed rgba(255, 215, 0, 0.2);
  }
  
  .vertical-track .track-lane:last-child {
    border-right: none;
  }
  
  .vertical-track .lane-number {
    left: 50%;
    top: 10px;
    transform: translateX(-50%);
  }
  
  .vertical-track .horse-label {
    left: 50%;
    top: 40px;
    transform: translateX(-50%);
    text-align: center;
  }
  
  .vertical-track .horse {
    left: 50%;
    top: 0;
    transform: translateX(-50%);
  }
  
  .vertical-track .horse-indicator {
    left: 50%;
    top: 70px;
    transform: translateX(-50%);
  }
  
  /* Resultado de la carrera */
  .race-result {
    text-align: center;
    animation: pop-in 0.5s forwards;
  }
  
  .result-title {
    font-size: 2.5rem;
    font-weight: 700;
    color: #FFD700;
    margin-bottom: 15px;
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
  }
  
  .result-message {
    font-size: 1.2rem;
    color: white;
    margin-bottom: 20px;
  }
  
  /* Botón para iniciar la carrera */
  .race-action-container {
    margin-top: 20px;
  }
  
  .start-race-btn {
    background: linear-gradient(45deg, #FFD700, #FFB627);
    color: #241554;
    font-size: 1.5rem;
    font-weight: 700;
    padding: 20px 35px;
    border-radius: 12px;
    box-shadow: 0 10px 25px -5px rgba(255, 215, 0, 0.4);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
  }
  
  .start-race-btn:hover {
    transform: translateY(-3px) scale(1.02);
    box-shadow: 0 15px 30px -5px rgba(255, 215, 0, 0.5);
  }
  
  .start-race-btn:active {
    transform: translateY(1px);
  }
  
  .race-icon {
    font-size: 1.8rem;
    animation: bounce 2s infinite;
  }
  
  /* Clases de utilidad */
  .hidden {
    display: none !important;
  }
  
  @keyframes bounce {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-6px);
    }
  }
  
  .start-race-btn::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
      to bottom right,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.3) 50%,
      rgba(255, 255, 255, 0) 100%
    );
    transform: rotate(45deg);
    animation: shine 3s infinite;
  }
  
  /* Modal de bono mejorado */
  .modal-backdrop {
    transition: opacity 0.5s ease;
  }
  
  .modal-card {
    transform-origin: center;
    transform: scale(0);
    transition: transform 0.7s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    width: 95%;
    max-width: 600px;
  }
  
  .modal-card.scale-100 {
    transform: scale(1);
  }
  
  .modal-card-inner {
    max-height: 90vh;
    overflow-y: auto;
    box-shadow: 0 10px 50px rgba(0, 0, 0, 0.8);
  }
  
  .bonus-icon {
    animation: pulse-glow 2s infinite alternate;
  }
  
  @keyframes pulse-glow {
    0% {
      box-shadow: 0 0 10px rgba(255, 208, 112, 0.5);
    }
    100% {
      box-shadow: 0 0 30px rgba(255, 208, 112, 0.8);
    }
  }
  
  .casino-gold {
    color: #FFD700;
  }
  
  .text-casino-gold {
    color: #FFD700;
  }
  
  /* Botón de acción */
  .cta-button {
    position: relative;
    overflow: hidden;
    box-shadow: 0 0 15px rgba(22, 163, 74, 0.5);
    font-size: 1.2rem;
    padding: 0.8rem;
  }
  
  .cta-button svg {
    width: 1.2rem;
    height: 1.2rem;
  }
  
  .cta-button::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
      to bottom right,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.2) 50%,
      rgba(255, 255, 255, 0) 100%
    );
    transform: rotate(45deg);
    animation: shine 3s infinite;
  }
  
  /* Animaciones */
  @keyframes shine {
    0% {
      left: -100%;
      top: -100%;
    }
    100% {
      left: 100%;
      top: 100%;
    }
  }
  
  @keyframes pop-in {
    0% {
      transform: scale(0);
    }
    70% {
      transform: scale(1.1);
    }
    100% {
      transform: scale(1);
    }
  }
  
  .animate-pulse-slow {
    animation: pulse-slow 2s infinite;
  }
  
  @keyframes pulse-slow {
    0%, 100% {
      opacity: 0.8;
    }
    50% {
      opacity: 1;
    }
  }
  
  .animate-spin-slow {
    animation: spin 8s linear infinite;
  }
  
  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
  
  .animate-pop-in {
    animation: pop-in 0.5s forwards;
  }
  
  /* Botón de cierre del modal */
  #close-modal {
    transition: transform 0.2s ease;
  }
  
  #close-modal:hover {
    transform: scale(1.1);
  }
  
  /* Responsive */
  @media (max-width: 768px) {
    .horse-option {
      width: 90px;
      height: 110px;
      padding: 10px;
      margin: 5px;
    }
    
    .horse-icon {
      font-size: 2rem;
    }
    
    .horse-name {
      font-size: 0.8rem;
    }
    
    .horse-color {
      font-size: 0.7rem;
    }
    
    .start-race-btn {
      font-size: 1.3rem;
      padding: 16px 28px;
    }
    
    .result-title {
      font-size: 2rem;
    }
    
    .result-message {
      font-size: 1rem;
    }
    
    .modal-card-inner {
      width: 90%;
      max-width: 500px;
      margin: 0 auto;
    }
    
    .modal-content {
      padding: 1.2rem;
    }
    
    .bonus-icon {
      width: 5rem;
      height: 5rem;
    }
    
    .cta-button {
      padding: 0.6rem;
      font-size: 1rem;
    }
    
    .cta-button svg {
      width: 1rem;
      height: 1rem;
    }
  }
  
  @media (max-width: 480px) {
    .horse-option {
      width: 70px;
      height: 90px;
      padding: 8px;
      margin: 4px;
    }
    
    .horse-icon {
      font-size: 1.5rem;
      margin-bottom: 5px;
    }
    
    .horse-name {
      font-size: 0.7rem;
    }
    
    .horse-color {
      font-size: 0.6rem;
    }
    
    .horse {
      font-size: 1.5rem;
    }
    
    .lane-number {
      width: 20px;
      height: 20px;
      font-size: 0.8rem;
    }
    
    .start-race-btn {
      font-size: 1.1rem;
      padding: 14px 22px;
    }
    
    .race-icon {
      font-size: 1.3rem;
    }
    
    .result-title {
      font-size: 1.5rem;
    }
    
    .result-message {
      font-size: 0.9rem;
    }
    
    .modal-content {
      padding: 1rem;
    }
    
    .bonus-icon {
      width: 4rem;
      height: 4rem;
    }
    
    #modal-title {
      font-size: 1.5rem;
    }
    
    #modal-subtitle {
      font-size: 1.2rem;
    }
    
    #modal-description {
      font-size: 0.9rem;
    }
    
    .feature-text {
      font-size: 0.8rem;
    }
    
    .cta-button {
      padding: 0.5rem;
      font-size: 0.9rem;
    }
    
    .cta-button svg {
      width: 0.8rem;
      height: 0.8rem;
    }
  }
  
  /* Animaciones para elementos flotantes */
  .floating-element:nth-child(1) {
    animation: floatElement1 6s ease-in-out infinite;
  }
  
  .floating-element:nth-child(2) {
    animation: floatElement2 9s ease-in-out infinite;
  }
  
  .floating-element:nth-child(3) {
    animation: floatElement3 8s ease-in-out infinite;
  }
  
  .floating-element:nth-child(4) {
    animation: floatElement4 10s ease-in-out infinite;
  }
  
  @keyframes floatElement1 {
    0%, 100% { transform: translateY(0) rotate(0deg); }
    33% { transform: translateY(-15px) rotate(5deg); }
    66% { transform: translateY(5px) rotate(-5deg); }
  }
  
  @keyframes floatElement2 {
    0%, 100% { transform: translateY(0) rotate(0deg); }
    50% { transform: translateY(-20px) rotate(-8deg); }
  }
  
  @keyframes floatElement3 {
    0%, 100% { transform: translateY(0) rotate(0deg); }
    25% { transform: translateY(-10px) rotate(8deg); }
    75% { transform: translateY(-18px) rotate(-5deg); }
  }
  
  @keyframes floatElement4 {
    0%, 100% { transform: translateY(0) rotate(0deg) scale(1); }
    30% { transform: translateY(-15px) rotate(10deg) scale(1.1); }
    60% { transform: translateY(8px) rotate(-5deg) scale(0.95); }
  }
  
  /* Estilos para efectos de luz fluida */
  .fluid-light {
    position: absolute;
    border-radius: 50%;
    filter: blur(80px);
    opacity: 0.6;
  }
  
  .fluid-red {
    background: radial-gradient(circle, rgba(255, 50, 50, 1) 0%, rgba(180, 0, 0, 0.8) 60%, rgba(100, 0, 0, 0) 100%);
    width: 40vw;
    height: 40vw;
    max-width: 500px;
    max-height: 500px;
    top: 25%;
    left: 15%;
    animation: fluidMove1 6s ease-in-out infinite alternate;
  }
  
  .fluid-blue {
    background: radial-gradient(circle, rgba(50, 100, 255, 1) 0%, rgba(0, 40, 180, 0.8) 60%, rgba(0, 0, 100, 0) 100%);
    width: 45vw;
    height: 45vw;
    max-width: 550px;
    max-height: 550px;
    top: 10%;
    right: 15%;
    animation: fluidMove2 7s ease-in-out infinite alternate;
  }
  
  .fluid-red-small {
    background: radial-gradient(circle, rgba(255, 50, 50, 1) 0%, rgba(180, 0, 0, 0.8) 60%, rgba(100, 0, 0, 0) 100%);
    width: 35vw;
    height: 35vw;
    max-width: 400px;
    max-height: 400px;
    bottom: 15%;
    left: 10%;
    animation: fluidMove3 6s ease-in-out infinite alternate;
  }
  
  .fluid-blue-small {
    background: radial-gradient(circle, rgba(50, 100, 255, 1) 0%, rgba(0, 40, 180, 0.8) 60%, rgba(0, 0, 100, 0) 100%);
    width: 30vw;
    height: 30vw;
    max-width: 350px;
    max-height: 350px;
    top: 20%;
    right: 5%;
    animation: fluidMove4 8s ease-in-out infinite alternate;
  }
  
  @keyframes fluidMove1 {
    0% { transform: translate(-15%, -15%) rotate(0deg); }
    25% { transform: translate(0%, 15%) rotate(90deg); }
    50% { transform: translate(15%, 0%) rotate(180deg); }
    75% { transform: translate(0%, -15%) rotate(270deg); }
    100% { transform: translate(-15%, -15%) rotate(360deg); }
  }
  
  @keyframes fluidMove2 {
    0% { transform: translate(15%, 15%) rotate(0deg); }
    25% { transform: translate(0%, -15%) rotate(-90deg); }
    50% { transform: translate(-15%, 0%) rotate(-180deg); }
    75% { transform: translate(0%, 15%) rotate(-270deg); }
    100% { transform: translate(15%, 15%) rotate(-360deg); }
  }
  
  @keyframes fluidMove3 {
    0% { transform: translate(-12%, -12%) rotate(0deg); }
    33% { transform: translate(12%, 0%) rotate(120deg); }
    66% { transform: translate(0%, 12%) rotate(240deg); }
    100% { transform: translate(-12%, -12%) rotate(360deg); }
  }
  
  @keyframes fluidMove4 {
    0% { transform: translate(12%, 12%) rotate(0deg); }
    33% { transform: translate(-12%, 0%) rotate(-120deg); }
    66% { transform: translate(0%, -12%) rotate(-240deg); }
    100% { transform: translate(12%, 12%) rotate(-360deg); }
  }
</style>